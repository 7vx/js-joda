{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "requireNonNull",
            "range": [
              237,
              251
            ],
            "loc": {
              "start": {
                "line": 7,
                "column": 8
              },
              "end": {
                "line": 7,
                "column": 22
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "requireNonNull",
            "range": [
              237,
              251
            ],
            "loc": {
              "start": {
                "line": 7,
                "column": 8
              },
              "end": {
                "line": 7,
                "column": 22
              }
            }
          },
          "range": [
            237,
            251
          ],
          "loc": {
            "start": {
              "line": 7,
              "column": 8
            },
            "end": {
              "line": 7,
              "column": 22
            }
          }
        },
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "abstractMethodFail",
            "range": [
              253,
              271
            ],
            "loc": {
              "start": {
                "line": 7,
                "column": 24
              },
              "end": {
                "line": 7,
                "column": 42
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "abstractMethodFail",
            "range": [
              253,
              271
            ],
            "loc": {
              "start": {
                "line": 7,
                "column": 24
              },
              "end": {
                "line": 7,
                "column": 42
              }
            }
          },
          "range": [
            253,
            271
          ],
          "loc": {
            "start": {
              "line": 7,
              "column": 24
            },
            "end": {
              "line": 7,
              "column": 42
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../assert",
        "raw": "'../assert'",
        "range": [
          278,
          289
        ],
        "loc": {
          "start": {
            "line": 7,
            "column": 49
          },
          "end": {
            "line": 7,
            "column": 60
          }
        }
      },
      "range": [
        229,
        290
      ],
      "loc": {
        "start": {
          "line": 7,
          "column": 0
        },
        "end": {
          "line": 7,
          "column": 61
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n ",
          "range": [
            0,
            227
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "Duration",
            "range": [
              300,
              308
            ],
            "loc": {
              "start": {
                "line": 9,
                "column": 8
              },
              "end": {
                "line": 9,
                "column": 16
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "Duration",
            "range": [
              300,
              308
            ],
            "loc": {
              "start": {
                "line": 9,
                "column": 8
              },
              "end": {
                "line": 9,
                "column": 16
              }
            }
          },
          "range": [
            300,
            308
          ],
          "loc": {
            "start": {
              "line": 9,
              "column": 8
            },
            "end": {
              "line": 9,
              "column": 16
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../Duration",
        "raw": "'../Duration'",
        "range": [
          315,
          328
        ],
        "loc": {
          "start": {
            "line": 9,
            "column": 23
          },
          "end": {
            "line": 9,
            "column": 36
          }
        }
      },
      "range": [
        292,
        329
      ],
      "loc": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 37
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "Instant",
            "range": [
              338,
              345
            ],
            "loc": {
              "start": {
                "line": 10,
                "column": 8
              },
              "end": {
                "line": 10,
                "column": 15
              }
            }
          },
          "imported": {
            "type": "Identifier",
            "name": "Instant",
            "range": [
              338,
              345
            ],
            "loc": {
              "start": {
                "line": 10,
                "column": 8
              },
              "end": {
                "line": 10,
                "column": 15
              }
            }
          },
          "range": [
            338,
            345
          ],
          "loc": {
            "start": {
              "line": 10,
              "column": 8
            },
            "end": {
              "line": 10,
              "column": 15
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "../Instant",
        "raw": "'../Instant'",
        "range": [
          352,
          364
        ],
        "loc": {
          "start": {
            "line": 10,
            "column": 22
          },
          "end": {
            "line": 10,
            "column": 34
          }
        }
      },
      "range": [
        330,
        365
      ],
      "loc": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 10,
          "column": 35
        }
      }
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "ClassDeclaration",
        "id": {
          "type": "Identifier",
          "name": "ZoneRules",
          "range": [
            380,
            389
          ],
          "loc": {
            "start": {
              "line": 12,
              "column": 13
            },
            "end": {
              "line": 12,
              "column": 22
            }
          }
        },
        "superClass": null,
        "body": {
          "type": "ClassBody",
          "body": [
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "of",
                "range": [
                  680,
                  682
                ],
                "loc": {
                  "start": {
                    "line": 22,
                    "column": 11
                  },
                  "end": {
                    "line": 22,
                    "column": 13
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "offset",
                    "range": [
                      683,
                      689
                    ],
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 14
                      },
                      "end": {
                        "line": 22,
                        "column": 20
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "requireNonNull",
                          "range": [
                            701,
                            715
                          ],
                          "loc": {
                            "start": {
                              "line": 23,
                              "column": 8
                            },
                            "end": {
                              "line": 23,
                              "column": 22
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "offset",
                            "range": [
                              716,
                              722
                            ],
                            "loc": {
                              "start": {
                                "line": 23,
                                "column": 23
                              },
                              "end": {
                                "line": 23,
                                "column": 29
                              }
                            }
                          },
                          {
                            "type": "Literal",
                            "value": "offset",
                            "raw": "'offset'",
                            "range": [
                              724,
                              732
                            ],
                            "loc": {
                              "start": {
                                "line": 23,
                                "column": 31
                              },
                              "end": {
                                "line": 23,
                                "column": 39
                              }
                            }
                          }
                        ],
                        "range": [
                          701,
                          733
                        ],
                        "loc": {
                          "start": {
                            "line": 23,
                            "column": 8
                          },
                          "end": {
                            "line": 23,
                            "column": 40
                          }
                        }
                      },
                      "range": [
                        701,
                        734
                      ],
                      "loc": {
                        "start": {
                          "line": 23,
                          "column": 8
                        },
                        "end": {
                          "line": 23,
                          "column": 41
                        }
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Fixed",
                          "range": [
                            754,
                            759
                          ],
                          "loc": {
                            "start": {
                              "line": 24,
                              "column": 19
                            },
                            "end": {
                              "line": 24,
                              "column": 24
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "offset",
                            "range": [
                              760,
                              766
                            ],
                            "loc": {
                              "start": {
                                "line": 24,
                                "column": 25
                              },
                              "end": {
                                "line": 24,
                                "column": 31
                              }
                            }
                          }
                        ],
                        "range": [
                          750,
                          767
                        ],
                        "loc": {
                          "start": {
                            "line": 24,
                            "column": 15
                          },
                          "end": {
                            "line": 24,
                            "column": 32
                          }
                        }
                      },
                      "range": [
                        743,
                        768
                      ],
                      "loc": {
                        "start": {
                          "line": 24,
                          "column": 8
                        },
                        "end": {
                          "line": 24,
                          "column": 33
                        }
                      }
                    }
                  ],
                  "range": [
                    691,
                    774
                  ],
                  "loc": {
                    "start": {
                      "line": 22,
                      "column": 22
                    },
                    "end": {
                      "line": 25,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  682,
                  774
                ],
                "loc": {
                  "start": {
                    "line": 22,
                    "column": 13
                  },
                  "end": {
                    "line": 25,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                673,
                774
              ],
              "loc": {
                "start": {
                  "line": 22,
                  "column": 4
                },
                "end": {
                  "line": 25,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Obtains an instance of {@link ZoneRules} that always uses the same offset.\n     *\n     * The returned rules always have the same offset.\n     *\n     * @param {ZoneOffset} offset - the offset, not null\n     * @return {ZoneRules} the zone rules, not null\n     ",
                  "range": [
                    397,
                    668
                  ],
                  "loc": {
                    "start": {
                      "line": 14,
                      "column": 4
                    },
                    "end": {
                      "line": 21,
                      "column": 7
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Line",
                  "value": "-----------------------------------------------------------------------",
                  "range": [
                    781,
                    854
                  ],
                  "loc": {
                    "start": {
                      "line": 28,
                      "column": 4
                    },
                    "end": {
                      "line": 28,
                      "column": 77
                    }
                  }
                },
                {
                  "type": "Block",
                  "value": "*\n     * Checks of the zone rules are fixed, such that the offset never varies.\n     *\n     * @return {boolean} true if the time-zone is fixed and the offset never changes\n     ",
                  "range": [
                    859,
                    1040
                  ],
                  "loc": {
                    "start": {
                      "line": 29,
                      "column": 4
                    },
                    "end": {
                      "line": 33,
                      "column": 7
                    }
                  }
                }
              ],
              "static": true
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "isFixedOffset",
                "range": [
                  1045,
                  1058
                ],
                "loc": {
                  "start": {
                    "line": 34,
                    "column": 4
                  },
                  "end": {
                    "line": 34,
                    "column": 17
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "abstractMethodFail",
                          "range": [
                            1070,
                            1088
                          ],
                          "loc": {
                            "start": {
                              "line": 35,
                              "column": 8
                            },
                            "end": {
                              "line": 35,
                              "column": 26
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "ZoneRules.isFixedOffset",
                            "raw": "'ZoneRules.isFixedOffset'",
                            "range": [
                              1089,
                              1114
                            ],
                            "loc": {
                              "start": {
                                "line": 35,
                                "column": 27
                              },
                              "end": {
                                "line": 35,
                                "column": 52
                              }
                            }
                          }
                        ],
                        "range": [
                          1070,
                          1115
                        ],
                        "loc": {
                          "start": {
                            "line": 35,
                            "column": 8
                          },
                          "end": {
                            "line": 35,
                            "column": 53
                          }
                        }
                      },
                      "range": [
                        1070,
                        1116
                      ],
                      "loc": {
                        "start": {
                          "line": 35,
                          "column": 8
                        },
                        "end": {
                          "line": 35,
                          "column": 54
                        }
                      }
                    }
                  ],
                  "range": [
                    1060,
                    1122
                  ],
                  "loc": {
                    "start": {
                      "line": 34,
                      "column": 19
                    },
                    "end": {
                      "line": 36,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1058,
                  1122
                ],
                "loc": {
                  "start": {
                    "line": 34,
                    "column": 17
                  },
                  "end": {
                    "line": 36,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                1045,
                1122
              ],
              "loc": {
                "start": {
                  "line": 34,
                  "column": 4
                },
                "end": {
                  "line": 36,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Line",
                  "value": "-----------------------------------------------------------------------",
                  "range": [
                    781,
                    854
                  ],
                  "loc": {
                    "start": {
                      "line": 28,
                      "column": 4
                    },
                    "end": {
                      "line": 28,
                      "column": 77
                    }
                  }
                },
                {
                  "type": "Block",
                  "value": "*\n     * Checks of the zone rules are fixed, such that the offset never varies.\n     *\n     * @return {boolean} true if the time-zone is fixed and the offset never changes\n     ",
                  "range": [
                    859,
                    1040
                  ],
                  "loc": {
                    "start": {
                      "line": 29,
                      "column": 4
                    },
                    "end": {
                      "line": 33,
                      "column": 7
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Line",
                  "value": "-----------------------------------------------------------------------",
                  "range": [
                    1128,
                    1201
                  ],
                  "loc": {
                    "start": {
                      "line": 38,
                      "column": 4
                    },
                    "end": {
                      "line": 38,
                      "column": 77
                    }
                  }
                },
                {
                  "type": "Block",
                  "value": "*\n     *\n     * @param instantOrLocalDateTime\n     * @returns {ZoneOffset}\n     ",
                  "range": [
                    1207,
                    1291
                  ],
                  "loc": {
                    "start": {
                      "line": 40,
                      "column": 4
                    },
                    "end": {
                      "line": 44,
                      "column": 7
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "offset",
                "range": [
                  1296,
                  1302
                ],
                "loc": {
                  "start": {
                    "line": 45,
                    "column": 4
                  },
                  "end": {
                    "line": 45,
                    "column": 10
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "instantOrLocalDateTime",
                    "range": [
                      1303,
                      1325
                    ],
                    "loc": {
                      "start": {
                        "line": 45,
                        "column": 11
                      },
                      "end": {
                        "line": 45,
                        "column": 33
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "BinaryExpression",
                        "operator": "instanceof",
                        "left": {
                          "type": "Identifier",
                          "name": "instantOrLocalDateTime",
                          "range": [
                            1339,
                            1361
                          ],
                          "loc": {
                            "start": {
                              "line": 46,
                              "column": 11
                            },
                            "end": {
                              "line": 46,
                              "column": 33
                            }
                          }
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "Instant",
                          "range": [
                            1373,
                            1380
                          ],
                          "loc": {
                            "start": {
                              "line": 46,
                              "column": 45
                            },
                            "end": {
                              "line": 46,
                              "column": 52
                            }
                          }
                        },
                        "range": [
                          1339,
                          1380
                        ],
                        "loc": {
                          "start": {
                            "line": 46,
                            "column": 11
                          },
                          "end": {
                            "line": 46,
                            "column": 52
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "ThisExpression",
                                  "range": [
                                    1402,
                                    1406
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 47,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 47,
                                      "column": 23
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "offsetOfInstant",
                                  "range": [
                                    1407,
                                    1422
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 47,
                                      "column": 24
                                    },
                                    "end": {
                                      "line": 47,
                                      "column": 39
                                    }
                                  }
                                },
                                "range": [
                                  1402,
                                  1422
                                ],
                                "loc": {
                                  "start": {
                                    "line": 47,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 47,
                                    "column": 39
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "instantOrLocalDateTime",
                                  "range": [
                                    1423,
                                    1445
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 47,
                                      "column": 40
                                    },
                                    "end": {
                                      "line": 47,
                                      "column": 62
                                    }
                                  }
                                }
                              ],
                              "range": [
                                1402,
                                1446
                              ],
                              "loc": {
                                "start": {
                                  "line": 47,
                                  "column": 19
                                },
                                "end": {
                                  "line": 47,
                                  "column": 63
                                }
                              }
                            },
                            "range": [
                              1395,
                              1447
                            ],
                            "loc": {
                              "start": {
                                "line": 47,
                                "column": 12
                              },
                              "end": {
                                "line": 47,
                                "column": 64
                              }
                            }
                          }
                        ],
                        "range": [
                          1381,
                          1457
                        ],
                        "loc": {
                          "start": {
                            "line": 46,
                            "column": 53
                          },
                          "end": {
                            "line": 48,
                            "column": 9
                          }
                        }
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "ThisExpression",
                                  "range": [
                                    1484,
                                    1488
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 49,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 49,
                                      "column": 23
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "offsetOfLocalDateTime",
                                  "range": [
                                    1489,
                                    1510
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 49,
                                      "column": 24
                                    },
                                    "end": {
                                      "line": 49,
                                      "column": 45
                                    }
                                  }
                                },
                                "range": [
                                  1484,
                                  1510
                                ],
                                "loc": {
                                  "start": {
                                    "line": 49,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 49,
                                    "column": 45
                                  }
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "instantOrLocalDateTime",
                                  "range": [
                                    1511,
                                    1533
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 49,
                                      "column": 46
                                    },
                                    "end": {
                                      "line": 49,
                                      "column": 68
                                    }
                                  }
                                }
                              ],
                              "range": [
                                1484,
                                1534
                              ],
                              "loc": {
                                "start": {
                                  "line": 49,
                                  "column": 19
                                },
                                "end": {
                                  "line": 49,
                                  "column": 69
                                }
                              }
                            },
                            "range": [
                              1477,
                              1535
                            ],
                            "loc": {
                              "start": {
                                "line": 49,
                                "column": 12
                              },
                              "end": {
                                "line": 49,
                                "column": 70
                              }
                            }
                          }
                        ],
                        "range": [
                          1463,
                          1545
                        ],
                        "loc": {
                          "start": {
                            "line": 48,
                            "column": 15
                          },
                          "end": {
                            "line": 50,
                            "column": 9
                          }
                        }
                      },
                      "range": [
                        1336,
                        1545
                      ],
                      "loc": {
                        "start": {
                          "line": 46,
                          "column": 8
                        },
                        "end": {
                          "line": 50,
                          "column": 9
                        }
                      }
                    }
                  ],
                  "range": [
                    1326,
                    1551
                  ],
                  "loc": {
                    "start": {
                      "line": 45,
                      "column": 34
                    },
                    "end": {
                      "line": 51,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1302,
                  1551
                ],
                "loc": {
                  "start": {
                    "line": 45,
                    "column": 10
                  },
                  "end": {
                    "line": 51,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                1296,
                1551
              ],
              "loc": {
                "start": {
                  "line": 45,
                  "column": 4
                },
                "end": {
                  "line": 51,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Line",
                  "value": "-----------------------------------------------------------------------",
                  "range": [
                    1128,
                    1201
                  ],
                  "loc": {
                    "start": {
                      "line": 38,
                      "column": 4
                    },
                    "end": {
                      "line": 38,
                      "column": 77
                    }
                  }
                },
                {
                  "type": "Block",
                  "value": "*\n     *\n     * @param instantOrLocalDateTime\n     * @returns {ZoneOffset}\n     ",
                  "range": [
                    1207,
                    1291
                  ],
                  "loc": {
                    "start": {
                      "line": 40,
                      "column": 4
                    },
                    "end": {
                      "line": 44,
                      "column": 7
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Gets the offset applicable at the specified instant in these rules.\n     *\n     * The mapping from an instant to an offset is simple, there is only\n     * one valid offset for each instant.\n     * This method returns that offset.\n     *\n     * @param {Instant} instant - the instant to find the offset for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset} the offset, not null\n     ",
                  "range": [
                    1557,
                    2024
                  ],
                  "loc": {
                    "start": {
                      "line": 53,
                      "column": 4
                    },
                    "end": {
                      "line": 63,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    2029,
                    2071
                  ],
                  "loc": {
                    "start": {
                      "line": 64,
                      "column": 4
                    },
                    "end": {
                      "line": 64,
                      "column": 46
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "offsetOfInstant",
                "range": [
                  2076,
                  2091
                ],
                "loc": {
                  "start": {
                    "line": 65,
                    "column": 4
                  },
                  "end": {
                    "line": 65,
                    "column": 19
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "instant",
                    "range": [
                      2092,
                      2099
                    ],
                    "loc": {
                      "start": {
                        "line": 65,
                        "column": 20
                      },
                      "end": {
                        "line": 65,
                        "column": 27
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "abstractMethodFail",
                          "range": [
                            2110,
                            2128
                          ],
                          "loc": {
                            "start": {
                              "line": 66,
                              "column": 8
                            },
                            "end": {
                              "line": 66,
                              "column": 26
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "ZoneRules.offsetInstant",
                            "raw": "'ZoneRules.offsetInstant'",
                            "range": [
                              2129,
                              2154
                            ],
                            "loc": {
                              "start": {
                                "line": 66,
                                "column": 27
                              },
                              "end": {
                                "line": 66,
                                "column": 52
                              }
                            }
                          }
                        ],
                        "range": [
                          2110,
                          2155
                        ],
                        "loc": {
                          "start": {
                            "line": 66,
                            "column": 8
                          },
                          "end": {
                            "line": 66,
                            "column": 53
                          }
                        }
                      },
                      "range": [
                        2110,
                        2156
                      ],
                      "loc": {
                        "start": {
                          "line": 66,
                          "column": 8
                        },
                        "end": {
                          "line": 66,
                          "column": 54
                        }
                      }
                    }
                  ],
                  "range": [
                    2100,
                    2162
                  ],
                  "loc": {
                    "start": {
                      "line": 65,
                      "column": 28
                    },
                    "end": {
                      "line": 67,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2091,
                  2162
                ],
                "loc": {
                  "start": {
                    "line": 65,
                    "column": 19
                  },
                  "end": {
                    "line": 67,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                2076,
                2162
              ],
              "loc": {
                "start": {
                  "line": 65,
                  "column": 4
                },
                "end": {
                  "line": 67,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Gets the offset applicable at the specified instant in these rules.\n     *\n     * The mapping from an instant to an offset is simple, there is only\n     * one valid offset for each instant.\n     * This method returns that offset.\n     *\n     * @param {Instant} instant - the instant to find the offset for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset} the offset, not null\n     ",
                  "range": [
                    1557,
                    2024
                  ],
                  "loc": {
                    "start": {
                      "line": 53,
                      "column": 4
                    },
                    "end": {
                      "line": 63,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    2029,
                    2071
                  ],
                  "loc": {
                    "start": {
                      "line": 64,
                      "column": 4
                    },
                    "end": {
                      "line": 64,
                      "column": 46
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Gets the offset applicable at the specified epochMilli in these rules.\n     *\n     * The method is for javascript performance optimisation.\n     *\n     * @param {number} epochMilli - the epoch millisecond to find the offset for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset} the offset, not null\n     ",
                  "range": [
                    2168,
                    2557
                  ],
                  "loc": {
                    "start": {
                      "line": 69,
                      "column": 4
                    },
                    "end": {
                      "line": 77,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    2562,
                    2604
                  ],
                  "loc": {
                    "start": {
                      "line": 78,
                      "column": 4
                    },
                    "end": {
                      "line": 78,
                      "column": 46
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "offsetOfEpochMilli",
                "range": [
                  2609,
                  2627
                ],
                "loc": {
                  "start": {
                    "line": 79,
                    "column": 4
                  },
                  "end": {
                    "line": 79,
                    "column": 22
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "epochMilli",
                    "range": [
                      2628,
                      2638
                    ],
                    "loc": {
                      "start": {
                        "line": 79,
                        "column": 23
                      },
                      "end": {
                        "line": 79,
                        "column": 33
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "abstractMethodFail",
                          "range": [
                            2649,
                            2667
                          ],
                          "loc": {
                            "start": {
                              "line": 80,
                              "column": 8
                            },
                            "end": {
                              "line": 80,
                              "column": 26
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "ZoneRules.offsetOfEpochMilli",
                            "raw": "'ZoneRules.offsetOfEpochMilli'",
                            "range": [
                              2668,
                              2698
                            ],
                            "loc": {
                              "start": {
                                "line": 80,
                                "column": 27
                              },
                              "end": {
                                "line": 80,
                                "column": 57
                              }
                            }
                          }
                        ],
                        "range": [
                          2649,
                          2699
                        ],
                        "loc": {
                          "start": {
                            "line": 80,
                            "column": 8
                          },
                          "end": {
                            "line": 80,
                            "column": 58
                          }
                        }
                      },
                      "range": [
                        2649,
                        2700
                      ],
                      "loc": {
                        "start": {
                          "line": 80,
                          "column": 8
                        },
                        "end": {
                          "line": 80,
                          "column": 59
                        }
                      }
                    }
                  ],
                  "range": [
                    2639,
                    2706
                  ],
                  "loc": {
                    "start": {
                      "line": 79,
                      "column": 34
                    },
                    "end": {
                      "line": 81,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2627,
                  2706
                ],
                "loc": {
                  "start": {
                    "line": 79,
                    "column": 22
                  },
                  "end": {
                    "line": 81,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                2609,
                2706
              ],
              "loc": {
                "start": {
                  "line": 79,
                  "column": 4
                },
                "end": {
                  "line": 81,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Gets the offset applicable at the specified epochMilli in these rules.\n     *\n     * The method is for javascript performance optimisation.\n     *\n     * @param {number} epochMilli - the epoch millisecond to find the offset for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset} the offset, not null\n     ",
                  "range": [
                    2168,
                    2557
                  ],
                  "loc": {
                    "start": {
                      "line": 69,
                      "column": 4
                    },
                    "end": {
                      "line": 77,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    2562,
                    2604
                  ],
                  "loc": {
                    "start": {
                      "line": 78,
                      "column": 4
                    },
                    "end": {
                      "line": 78,
                      "column": 46
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Gets a suitable offset for the specified local date-time in these rules.\n     *\n     * The mapping from a local date-time to an offset is not straightforward.\n     * There are three cases:\n     *\n     * * Normal, with one valid offset. For the vast majority of the year, the normal\n     *   case applies, where there is a single valid offset for the local date-time.\n     * * Gap, with zero valid offsets. This is when clocks jump forward typically\n     *   due to the spring daylight savings change from \"winter\" to \"summer\".\n     *   In a gap there are local date-time values with no valid offset.\n     * * Overlap, with two valid offsets. This is when clocks are set back typically\n     *   due to the autumn daylight savings change from \"summer\" to \"winter\".\n     *   In an overlap there are local date-time values with two valid offsets.\n     *\n     * Thus, for any given local date-time there can be zero, one or two valid offsets.\n     * This method returns the single offset in the Normal case, and in the Gap or Overlap\n     * case it returns the offset before the transition.\n     *\n     * Since, in the case of Gap and Overlap, the offset returned is a \"best\" value, rather\n     * than the \"correct\" value, it should be treated with care. Applications that care\n     * about the correct offset should use a combination of this method,\n     * {@link getValidOffsets} and {@link getTransition}.\n     *\n     * @param {LocalDateTime} localDateTime - the local date-time to query, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset} the best available offset for the local date-time, not null\n     ",
                  "range": [
                    2713,
                    4399
                  ],
                  "loc": {
                    "start": {
                      "line": 84,
                      "column": 4
                    },
                    "end": {
                      "line": 111,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    4404,
                    4446
                  ],
                  "loc": {
                    "start": {
                      "line": 112,
                      "column": 4
                    },
                    "end": {
                      "line": 112,
                      "column": 46
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "offsetOfLocalDateTime",
                "range": [
                  4451,
                  4472
                ],
                "loc": {
                  "start": {
                    "line": 113,
                    "column": 4
                  },
                  "end": {
                    "line": 113,
                    "column": 25
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "localDateTime",
                    "range": [
                      4473,
                      4486
                    ],
                    "loc": {
                      "start": {
                        "line": 113,
                        "column": 26
                      },
                      "end": {
                        "line": 113,
                        "column": 39
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "abstractMethodFail",
                          "range": [
                            4497,
                            4515
                          ],
                          "loc": {
                            "start": {
                              "line": 114,
                              "column": 8
                            },
                            "end": {
                              "line": 114,
                              "column": 26
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "ZoneRules.offsetLocalDateTime",
                            "raw": "'ZoneRules.offsetLocalDateTime'",
                            "range": [
                              4516,
                              4547
                            ],
                            "loc": {
                              "start": {
                                "line": 114,
                                "column": 27
                              },
                              "end": {
                                "line": 114,
                                "column": 58
                              }
                            }
                          }
                        ],
                        "range": [
                          4497,
                          4548
                        ],
                        "loc": {
                          "start": {
                            "line": 114,
                            "column": 8
                          },
                          "end": {
                            "line": 114,
                            "column": 59
                          }
                        }
                      },
                      "range": [
                        4497,
                        4549
                      ],
                      "loc": {
                        "start": {
                          "line": 114,
                          "column": 8
                        },
                        "end": {
                          "line": 114,
                          "column": 60
                        }
                      }
                    }
                  ],
                  "range": [
                    4487,
                    4555
                  ],
                  "loc": {
                    "start": {
                      "line": 113,
                      "column": 40
                    },
                    "end": {
                      "line": 115,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  4472,
                  4555
                ],
                "loc": {
                  "start": {
                    "line": 113,
                    "column": 25
                  },
                  "end": {
                    "line": 115,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                4451,
                4555
              ],
              "loc": {
                "start": {
                  "line": 113,
                  "column": 4
                },
                "end": {
                  "line": 115,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Gets a suitable offset for the specified local date-time in these rules.\n     *\n     * The mapping from a local date-time to an offset is not straightforward.\n     * There are three cases:\n     *\n     * * Normal, with one valid offset. For the vast majority of the year, the normal\n     *   case applies, where there is a single valid offset for the local date-time.\n     * * Gap, with zero valid offsets. This is when clocks jump forward typically\n     *   due to the spring daylight savings change from \"winter\" to \"summer\".\n     *   In a gap there are local date-time values with no valid offset.\n     * * Overlap, with two valid offsets. This is when clocks are set back typically\n     *   due to the autumn daylight savings change from \"summer\" to \"winter\".\n     *   In an overlap there are local date-time values with two valid offsets.\n     *\n     * Thus, for any given local date-time there can be zero, one or two valid offsets.\n     * This method returns the single offset in the Normal case, and in the Gap or Overlap\n     * case it returns the offset before the transition.\n     *\n     * Since, in the case of Gap and Overlap, the offset returned is a \"best\" value, rather\n     * than the \"correct\" value, it should be treated with care. Applications that care\n     * about the correct offset should use a combination of this method,\n     * {@link getValidOffsets} and {@link getTransition}.\n     *\n     * @param {LocalDateTime} localDateTime - the local date-time to query, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset} the best available offset for the local date-time, not null\n     ",
                  "range": [
                    2713,
                    4399
                  ],
                  "loc": {
                    "start": {
                      "line": 84,
                      "column": 4
                    },
                    "end": {
                      "line": 111,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    4404,
                    4446
                  ],
                  "loc": {
                    "start": {
                      "line": 112,
                      "column": 4
                    },
                    "end": {
                      "line": 112,
                      "column": 46
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Gets the offset applicable at the specified local date-time in these rules.\n     *\n     * The mapping from a local date-time to an offset is not straightforward.\n     * There are three cases:\n     *\n     * * Normal, with one valid offset. For the vast majority of the year, the normal\n     *   case applies, where there is a single valid offset for the local date-time.\n     * * Gap, with zero valid offsets. This is when clocks jump forward typically\n     *   due to the spring daylight savings change from \"winter\" to \"summer\".\n     *   In a gap there are local date-time values with no valid offset.\n     * * Overlap, with two valid offsets. This is when clocks are set back typically\n     *   due to the autumn daylight savings change from \"summer\" to \"winter\".\n     *   In an overlap there are local date-time values with two valid offsets.\n     *\n     * Thus, for any given local date-time there can be zero, one or two valid offsets.\n     * This method returns that list of valid offsets, which is a list of size 0, 1 or 2.\n     * In the case where there are two offsets, the earlier offset is returned at index 0\n     * and the later offset at index 1.\n     *\n     * There are various ways to handle the conversion from a {@link LocalDateTime}.\n     * One technique, using this method, would be:\n     * <pre>\n     *  List<ZoneOffset> validOffsets = rules.getOffset(localDT);\n     *  if (validOffsets.size() == 1) {\n     *    // Normal case: only one valid offset\n     *    zoneOffset = validOffsets.get(0);\n     *  } else {\n     *    // Gap or Overlap: determine what to do from transition (which will be non-null)\n     *    ZoneOffsetTransition trans = rules.getTransition(localDT);\n     *  }\n     * </pre>\n     *\n     * In theory, it is possible for there to be more than two valid offsets.\n     * This would happen if clocks to be put back more than once in quick succession.\n     * This has never happened in the history of time-zones and thus has no special handling.\n     * However, if it were to happen, then the list would return more than 2 entries.\n     *\n     * @param {LocalDateTime} localDateTime - the local date-time to query for valid offsets, not null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset[]} the list of valid offsets, may be immutable, not null\n     ",
                  "range": [
                    4561,
                    6914
                  ],
                  "loc": {
                    "start": {
                      "line": 117,
                      "column": 4
                    },
                    "end": {
                      "line": 158,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    6919,
                    6961
                  ],
                  "loc": {
                    "start": {
                      "line": 159,
                      "column": 4
                    },
                    "end": {
                      "line": 159,
                      "column": 46
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "validOffsets",
                "range": [
                  6966,
                  6978
                ],
                "loc": {
                  "start": {
                    "line": 160,
                    "column": 4
                  },
                  "end": {
                    "line": 160,
                    "column": 16
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "localDateTime",
                    "range": [
                      6979,
                      6992
                    ],
                    "loc": {
                      "start": {
                        "line": 160,
                        "column": 17
                      },
                      "end": {
                        "line": 160,
                        "column": 30
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "abstractMethodFail",
                          "range": [
                            7003,
                            7021
                          ],
                          "loc": {
                            "start": {
                              "line": 161,
                              "column": 8
                            },
                            "end": {
                              "line": 161,
                              "column": 26
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "ZoneRules.validOffsets",
                            "raw": "'ZoneRules.validOffsets'",
                            "range": [
                              7022,
                              7046
                            ],
                            "loc": {
                              "start": {
                                "line": 161,
                                "column": 27
                              },
                              "end": {
                                "line": 161,
                                "column": 51
                              }
                            }
                          }
                        ],
                        "range": [
                          7003,
                          7047
                        ],
                        "loc": {
                          "start": {
                            "line": 161,
                            "column": 8
                          },
                          "end": {
                            "line": 161,
                            "column": 52
                          }
                        }
                      },
                      "range": [
                        7003,
                        7048
                      ],
                      "loc": {
                        "start": {
                          "line": 161,
                          "column": 8
                        },
                        "end": {
                          "line": 161,
                          "column": 53
                        }
                      }
                    }
                  ],
                  "range": [
                    6993,
                    7054
                  ],
                  "loc": {
                    "start": {
                      "line": 160,
                      "column": 31
                    },
                    "end": {
                      "line": 162,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  6978,
                  7054
                ],
                "loc": {
                  "start": {
                    "line": 160,
                    "column": 16
                  },
                  "end": {
                    "line": 162,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                6966,
                7054
              ],
              "loc": {
                "start": {
                  "line": 160,
                  "column": 4
                },
                "end": {
                  "line": 162,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Gets the offset applicable at the specified local date-time in these rules.\n     *\n     * The mapping from a local date-time to an offset is not straightforward.\n     * There are three cases:\n     *\n     * * Normal, with one valid offset. For the vast majority of the year, the normal\n     *   case applies, where there is a single valid offset for the local date-time.\n     * * Gap, with zero valid offsets. This is when clocks jump forward typically\n     *   due to the spring daylight savings change from \"winter\" to \"summer\".\n     *   In a gap there are local date-time values with no valid offset.\n     * * Overlap, with two valid offsets. This is when clocks are set back typically\n     *   due to the autumn daylight savings change from \"summer\" to \"winter\".\n     *   In an overlap there are local date-time values with two valid offsets.\n     *\n     * Thus, for any given local date-time there can be zero, one or two valid offsets.\n     * This method returns that list of valid offsets, which is a list of size 0, 1 or 2.\n     * In the case where there are two offsets, the earlier offset is returned at index 0\n     * and the later offset at index 1.\n     *\n     * There are various ways to handle the conversion from a {@link LocalDateTime}.\n     * One technique, using this method, would be:\n     * <pre>\n     *  List<ZoneOffset> validOffsets = rules.getOffset(localDT);\n     *  if (validOffsets.size() == 1) {\n     *    // Normal case: only one valid offset\n     *    zoneOffset = validOffsets.get(0);\n     *  } else {\n     *    // Gap or Overlap: determine what to do from transition (which will be non-null)\n     *    ZoneOffsetTransition trans = rules.getTransition(localDT);\n     *  }\n     * </pre>\n     *\n     * In theory, it is possible for there to be more than two valid offsets.\n     * This would happen if clocks to be put back more than once in quick succession.\n     * This has never happened in the history of time-zones and thus has no special handling.\n     * However, if it were to happen, then the list would return more than 2 entries.\n     *\n     * @param {LocalDateTime} localDateTime - the local date-time to query for valid offsets, not null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset[]} the list of valid offsets, may be immutable, not null\n     ",
                  "range": [
                    4561,
                    6914
                  ],
                  "loc": {
                    "start": {
                      "line": 117,
                      "column": 4
                    },
                    "end": {
                      "line": 158,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    6919,
                    6961
                  ],
                  "loc": {
                    "start": {
                      "line": 159,
                      "column": 4
                    },
                    "end": {
                      "line": 159,
                      "column": 46
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Gets the offset transition applicable at the specified local date-time in these rules.\n     *\n     * The mapping from a local date-time to an offset is not straightforward.\n     * There are three cases:\n     *\n     * * Normal, with one valid offset. For the vast majority of the year, the normal\n     *   case applies, where there is a single valid offset for the local date-time.\n     * * Gap, with zero valid offsets. This is when clocks jump forward typically\n     *   due to the spring daylight savings change from \"winter\" to \"summer\".\n     *   In a gap there are local date-time values with no valid offset.\n     * * Overlap, with two valid offsets. This is when clocks are set back typically\n     *   due to the autumn daylight savings change from \"summer\" to \"winter\".\n     *   In an overlap there are local date-time values with two valid offsets.\n     *\n     * A transition is used to model the cases of a Gap or Overlap.\n     * The Normal case will return null.\n     *\n     * There are various ways to handle the conversion from a {@link LocalDateTime}.\n     * One technique, using this method, would be:\n     * <pre>\n     *  ZoneOffsetTransition trans = rules.getTransition(localDT);\n     *  if (trans != null) {\n     *    // Gap or Overlap: determine what to do from transition\n     *  } else {\n     *    // Normal case: only one valid offset\n     *    zoneOffset = rule.getOffset(localDT);\n     *  }\n     * </pre>\n     *\n     * @param {LocalDateTime} localDateTime  the local date-time to query for offset transition, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffsetTransition} the offset transition, null if the local date-time is not in transition\n     ",
                  "range": [
                    7060,
                    8813
                  ],
                  "loc": {
                    "start": {
                      "line": 164,
                      "column": 4
                    },
                    "end": {
                      "line": 197,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    8818,
                    8860
                  ],
                  "loc": {
                    "start": {
                      "line": 198,
                      "column": 4
                    },
                    "end": {
                      "line": 198,
                      "column": 46
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "transition",
                "range": [
                  8865,
                  8875
                ],
                "loc": {
                  "start": {
                    "line": 199,
                    "column": 4
                  },
                  "end": {
                    "line": 199,
                    "column": 14
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "localDateTime",
                    "range": [
                      8876,
                      8889
                    ],
                    "loc": {
                      "start": {
                        "line": 199,
                        "column": 15
                      },
                      "end": {
                        "line": 199,
                        "column": 28
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "abstractMethodFail",
                          "range": [
                            8900,
                            8918
                          ],
                          "loc": {
                            "start": {
                              "line": 200,
                              "column": 8
                            },
                            "end": {
                              "line": 200,
                              "column": 26
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "ZoneRules.transition",
                            "raw": "'ZoneRules.transition'",
                            "range": [
                              8919,
                              8941
                            ],
                            "loc": {
                              "start": {
                                "line": 200,
                                "column": 27
                              },
                              "end": {
                                "line": 200,
                                "column": 49
                              }
                            }
                          }
                        ],
                        "range": [
                          8900,
                          8942
                        ],
                        "loc": {
                          "start": {
                            "line": 200,
                            "column": 8
                          },
                          "end": {
                            "line": 200,
                            "column": 50
                          }
                        }
                      },
                      "range": [
                        8900,
                        8943
                      ],
                      "loc": {
                        "start": {
                          "line": 200,
                          "column": 8
                        },
                        "end": {
                          "line": 200,
                          "column": 51
                        }
                      }
                    }
                  ],
                  "range": [
                    8890,
                    8949
                  ],
                  "loc": {
                    "start": {
                      "line": 199,
                      "column": 29
                    },
                    "end": {
                      "line": 201,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  8875,
                  8949
                ],
                "loc": {
                  "start": {
                    "line": 199,
                    "column": 14
                  },
                  "end": {
                    "line": 201,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                8865,
                8949
              ],
              "loc": {
                "start": {
                  "line": 199,
                  "column": 4
                },
                "end": {
                  "line": 201,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Gets the offset transition applicable at the specified local date-time in these rules.\n     *\n     * The mapping from a local date-time to an offset is not straightforward.\n     * There are three cases:\n     *\n     * * Normal, with one valid offset. For the vast majority of the year, the normal\n     *   case applies, where there is a single valid offset for the local date-time.\n     * * Gap, with zero valid offsets. This is when clocks jump forward typically\n     *   due to the spring daylight savings change from \"winter\" to \"summer\".\n     *   In a gap there are local date-time values with no valid offset.\n     * * Overlap, with two valid offsets. This is when clocks are set back typically\n     *   due to the autumn daylight savings change from \"summer\" to \"winter\".\n     *   In an overlap there are local date-time values with two valid offsets.\n     *\n     * A transition is used to model the cases of a Gap or Overlap.\n     * The Normal case will return null.\n     *\n     * There are various ways to handle the conversion from a {@link LocalDateTime}.\n     * One technique, using this method, would be:\n     * <pre>\n     *  ZoneOffsetTransition trans = rules.getTransition(localDT);\n     *  if (trans != null) {\n     *    // Gap or Overlap: determine what to do from transition\n     *  } else {\n     *    // Normal case: only one valid offset\n     *    zoneOffset = rule.getOffset(localDT);\n     *  }\n     * </pre>\n     *\n     * @param {LocalDateTime} localDateTime  the local date-time to query for offset transition, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffsetTransition} the offset transition, null if the local date-time is not in transition\n     ",
                  "range": [
                    7060,
                    8813
                  ],
                  "loc": {
                    "start": {
                      "line": 164,
                      "column": 4
                    },
                    "end": {
                      "line": 197,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    8818,
                    8860
                  ],
                  "loc": {
                    "start": {
                      "line": 198,
                      "column": 4
                    },
                    "end": {
                      "line": 198,
                      "column": 46
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Line",
                  "value": "-----------------------------------------------------------------------",
                  "range": [
                    8955,
                    9028
                  ],
                  "loc": {
                    "start": {
                      "line": 203,
                      "column": 4
                    },
                    "end": {
                      "line": 203,
                      "column": 77
                    }
                  }
                },
                {
                  "type": "Block",
                  "value": "*\n     * Gets the standard offset for the specified instant in this zone.\n     *\n     * This provides access to historic information on how the standard offset\n     * has changed over time.\n     * The standard offset is the offset before any daylight saving time is applied.\n     * This is typically the offset applicable during winter.\n     *\n     * @param {Instant} instant - the instant to find the offset information for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset} the standard offset, not null\n     ",
                  "range": [
                    9033,
                    9619
                  ],
                  "loc": {
                    "start": {
                      "line": 204,
                      "column": 4
                    },
                    "end": {
                      "line": 215,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    9624,
                    9666
                  ],
                  "loc": {
                    "start": {
                      "line": 216,
                      "column": 4
                    },
                    "end": {
                      "line": 216,
                      "column": 46
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "standardOffset",
                "range": [
                  9671,
                  9685
                ],
                "loc": {
                  "start": {
                    "line": 217,
                    "column": 4
                  },
                  "end": {
                    "line": 217,
                    "column": 18
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "instant",
                    "range": [
                      9686,
                      9693
                    ],
                    "loc": {
                      "start": {
                        "line": 217,
                        "column": 19
                      },
                      "end": {
                        "line": 217,
                        "column": 26
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "abstractMethodFail",
                          "range": [
                            9704,
                            9722
                          ],
                          "loc": {
                            "start": {
                              "line": 218,
                              "column": 8
                            },
                            "end": {
                              "line": 218,
                              "column": 26
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "ZoneRules.standardOffset",
                            "raw": "'ZoneRules.standardOffset'",
                            "range": [
                              9723,
                              9749
                            ],
                            "loc": {
                              "start": {
                                "line": 218,
                                "column": 27
                              },
                              "end": {
                                "line": 218,
                                "column": 53
                              }
                            }
                          }
                        ],
                        "range": [
                          9704,
                          9750
                        ],
                        "loc": {
                          "start": {
                            "line": 218,
                            "column": 8
                          },
                          "end": {
                            "line": 218,
                            "column": 54
                          }
                        }
                      },
                      "range": [
                        9704,
                        9751
                      ],
                      "loc": {
                        "start": {
                          "line": 218,
                          "column": 8
                        },
                        "end": {
                          "line": 218,
                          "column": 55
                        }
                      }
                    }
                  ],
                  "range": [
                    9694,
                    9757
                  ],
                  "loc": {
                    "start": {
                      "line": 217,
                      "column": 27
                    },
                    "end": {
                      "line": 219,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  9685,
                  9757
                ],
                "loc": {
                  "start": {
                    "line": 217,
                    "column": 18
                  },
                  "end": {
                    "line": 219,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                9671,
                9757
              ],
              "loc": {
                "start": {
                  "line": 217,
                  "column": 4
                },
                "end": {
                  "line": 219,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Line",
                  "value": "-----------------------------------------------------------------------",
                  "range": [
                    8955,
                    9028
                  ],
                  "loc": {
                    "start": {
                      "line": 203,
                      "column": 4
                    },
                    "end": {
                      "line": 203,
                      "column": 77
                    }
                  }
                },
                {
                  "type": "Block",
                  "value": "*\n     * Gets the standard offset for the specified instant in this zone.\n     *\n     * This provides access to historic information on how the standard offset\n     * has changed over time.\n     * The standard offset is the offset before any daylight saving time is applied.\n     * This is typically the offset applicable during winter.\n     *\n     * @param {Instant} instant - the instant to find the offset information for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset} the standard offset, not null\n     ",
                  "range": [
                    9033,
                    9619
                  ],
                  "loc": {
                    "start": {
                      "line": 204,
                      "column": 4
                    },
                    "end": {
                      "line": 215,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    9624,
                    9666
                  ],
                  "loc": {
                    "start": {
                      "line": 216,
                      "column": 4
                    },
                    "end": {
                      "line": 216,
                      "column": 46
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Gets the amount of daylight savings in use for the specified instant in this zone.\n     *\n     * This provides access to historic information on how the amount of daylight\n     * savings has changed over time.\n     * This is the difference between the standard offset and the actual offset.\n     * Typically the amount is zero during winter and one hour during summer.\n     * Time-zones are second-based, so the nanosecond part of the duration will be zero.\n     *\n     * @param {Instant} instant - the instant to find the daylight savings for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {Duration} the difference between the standard and actual offset, not null\n     ",
                  "range": [
                    9763,
                    10509
                  ],
                  "loc": {
                    "start": {
                      "line": 221,
                      "column": 4
                    },
                    "end": {
                      "line": 233,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    10514,
                    10556
                  ],
                  "loc": {
                    "start": {
                      "line": 234,
                      "column": 4
                    },
                    "end": {
                      "line": 234,
                      "column": 46
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "daylightSavings",
                "range": [
                  10561,
                  10576
                ],
                "loc": {
                  "start": {
                    "line": 235,
                    "column": 4
                  },
                  "end": {
                    "line": 235,
                    "column": 19
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "instant",
                    "range": [
                      10577,
                      10584
                    ],
                    "loc": {
                      "start": {
                        "line": 235,
                        "column": 20
                      },
                      "end": {
                        "line": 235,
                        "column": 27
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "abstractMethodFail",
                          "range": [
                            10595,
                            10613
                          ],
                          "loc": {
                            "start": {
                              "line": 236,
                              "column": 8
                            },
                            "end": {
                              "line": 236,
                              "column": 26
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "ZoneRules.daylightSavings",
                            "raw": "'ZoneRules.daylightSavings'",
                            "range": [
                              10614,
                              10641
                            ],
                            "loc": {
                              "start": {
                                "line": 236,
                                "column": 27
                              },
                              "end": {
                                "line": 236,
                                "column": 54
                              }
                            }
                          }
                        ],
                        "range": [
                          10595,
                          10642
                        ],
                        "loc": {
                          "start": {
                            "line": 236,
                            "column": 8
                          },
                          "end": {
                            "line": 236,
                            "column": 55
                          }
                        }
                      },
                      "range": [
                        10595,
                        10643
                      ],
                      "loc": {
                        "start": {
                          "line": 236,
                          "column": 8
                        },
                        "end": {
                          "line": 236,
                          "column": 56
                        }
                      },
                      "trailingComments": [
                        {
                          "type": "Line",
                          "value": "    default {",
                          "range": [
                            10652,
                            10667
                          ],
                          "loc": {
                            "start": {
                              "line": 237,
                              "column": 8
                            },
                            "end": {
                              "line": 237,
                              "column": 23
                            }
                          }
                        },
                        {
                          "type": "Line",
                          "value": "        ZoneOffset standardOffset = getStandardOffset(instant);",
                          "range": [
                            10676,
                            10741
                          ],
                          "loc": {
                            "start": {
                              "line": 238,
                              "column": 8
                            },
                            "end": {
                              "line": 238,
                              "column": 73
                            }
                          }
                        },
                        {
                          "type": "Line",
                          "value": "        ZoneOffset actualOffset = getOffset(instant);",
                          "range": [
                            10750,
                            10805
                          ],
                          "loc": {
                            "start": {
                              "line": 239,
                              "column": 8
                            },
                            "end": {
                              "line": 239,
                              "column": 63
                            }
                          }
                        },
                        {
                          "type": "Line",
                          "value": "        return actualOffset.toDuration().minus(standardOffset.toDuration()).normalized();",
                          "range": [
                            10814,
                            10905
                          ],
                          "loc": {
                            "start": {
                              "line": 240,
                              "column": 8
                            },
                            "end": {
                              "line": 240,
                              "column": 99
                            }
                          }
                        },
                        {
                          "type": "Line",
                          "value": "    }",
                          "range": [
                            10914,
                            10921
                          ],
                          "loc": {
                            "start": {
                              "line": 241,
                              "column": 8
                            },
                            "end": {
                              "line": 241,
                              "column": 15
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "range": [
                    10585,
                    10927
                  ],
                  "loc": {
                    "start": {
                      "line": 235,
                      "column": 28
                    },
                    "end": {
                      "line": 242,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  10576,
                  10927
                ],
                "loc": {
                  "start": {
                    "line": 235,
                    "column": 19
                  },
                  "end": {
                    "line": 242,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                10561,
                10927
              ],
              "loc": {
                "start": {
                  "line": 235,
                  "column": 4
                },
                "end": {
                  "line": 242,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Gets the amount of daylight savings in use for the specified instant in this zone.\n     *\n     * This provides access to historic information on how the amount of daylight\n     * savings has changed over time.\n     * This is the difference between the standard offset and the actual offset.\n     * Typically the amount is zero during winter and one hour during summer.\n     * Time-zones are second-based, so the nanosecond part of the duration will be zero.\n     *\n     * @param {Instant} instant - the instant to find the daylight savings for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {Duration} the difference between the standard and actual offset, not null\n     ",
                  "range": [
                    9763,
                    10509
                  ],
                  "loc": {
                    "start": {
                      "line": 221,
                      "column": 4
                    },
                    "end": {
                      "line": 233,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    10514,
                    10556
                  ],
                  "loc": {
                    "start": {
                      "line": 234,
                      "column": 4
                    },
                    "end": {
                      "line": 234,
                      "column": 46
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Checks if the specified instant is in daylight savings.\n     *\n     * This checks if the standard and actual offsets are the same at the specified instant.\n     *\n     * @param {Instant} instant - the instant to find the offset information for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {boolean} the standard offset, not null\n     ",
                  "range": [
                    10933,
                    11344
                  ],
                  "loc": {
                    "start": {
                      "line": 244,
                      "column": 4
                    },
                    "end": {
                      "line": 252,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    11349,
                    11391
                  ],
                  "loc": {
                    "start": {
                      "line": 253,
                      "column": 4
                    },
                    "end": {
                      "line": 253,
                      "column": 46
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "isDaylightSavings",
                "range": [
                  11396,
                  11413
                ],
                "loc": {
                  "start": {
                    "line": 254,
                    "column": 4
                  },
                  "end": {
                    "line": 254,
                    "column": 21
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "instant",
                    "range": [
                      11414,
                      11421
                    ],
                    "loc": {
                      "start": {
                        "line": 254,
                        "column": 22
                      },
                      "end": {
                        "line": 254,
                        "column": 29
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "abstractMethodFail",
                          "range": [
                            11433,
                            11451
                          ],
                          "loc": {
                            "start": {
                              "line": 255,
                              "column": 8
                            },
                            "end": {
                              "line": 255,
                              "column": 26
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "ZoneRules.isDaylightSavings",
                            "raw": "'ZoneRules.isDaylightSavings'",
                            "range": [
                              11452,
                              11481
                            ],
                            "loc": {
                              "start": {
                                "line": 255,
                                "column": 27
                              },
                              "end": {
                                "line": 255,
                                "column": 56
                              }
                            }
                          }
                        ],
                        "range": [
                          11433,
                          11482
                        ],
                        "loc": {
                          "start": {
                            "line": 255,
                            "column": 8
                          },
                          "end": {
                            "line": 255,
                            "column": 57
                          }
                        }
                      },
                      "range": [
                        11433,
                        11483
                      ],
                      "loc": {
                        "start": {
                          "line": 255,
                          "column": 8
                        },
                        "end": {
                          "line": 255,
                          "column": 58
                        }
                      },
                      "trailingComments": [
                        {
                          "type": "Line",
                          "value": "    default {",
                          "range": [
                            11492,
                            11507
                          ],
                          "loc": {
                            "start": {
                              "line": 256,
                              "column": 8
                            },
                            "end": {
                              "line": 256,
                              "column": 23
                            }
                          }
                        },
                        {
                          "type": "Line",
                          "value": "        return (getStandardOffset(instant).equals(getOffset(instant)) == false);",
                          "range": [
                            11516,
                            11598
                          ],
                          "loc": {
                            "start": {
                              "line": 257,
                              "column": 8
                            },
                            "end": {
                              "line": 257,
                              "column": 90
                            }
                          }
                        },
                        {
                          "type": "Line",
                          "value": "    }",
                          "range": [
                            11607,
                            11614
                          ],
                          "loc": {
                            "start": {
                              "line": 258,
                              "column": 8
                            },
                            "end": {
                              "line": 258,
                              "column": 15
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "range": [
                    11423,
                    11620
                  ],
                  "loc": {
                    "start": {
                      "line": 254,
                      "column": 31
                    },
                    "end": {
                      "line": 259,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  11413,
                  11620
                ],
                "loc": {
                  "start": {
                    "line": 254,
                    "column": 21
                  },
                  "end": {
                    "line": 259,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                11396,
                11620
              ],
              "loc": {
                "start": {
                  "line": 254,
                  "column": 4
                },
                "end": {
                  "line": 259,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Line",
                  "value": "    default {",
                  "range": [
                    10652,
                    10667
                  ],
                  "loc": {
                    "start": {
                      "line": 237,
                      "column": 8
                    },
                    "end": {
                      "line": 237,
                      "column": 23
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": "        ZoneOffset standardOffset = getStandardOffset(instant);",
                  "range": [
                    10676,
                    10741
                  ],
                  "loc": {
                    "start": {
                      "line": 238,
                      "column": 8
                    },
                    "end": {
                      "line": 238,
                      "column": 73
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": "        ZoneOffset actualOffset = getOffset(instant);",
                  "range": [
                    10750,
                    10805
                  ],
                  "loc": {
                    "start": {
                      "line": 239,
                      "column": 8
                    },
                    "end": {
                      "line": 239,
                      "column": 63
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": "        return actualOffset.toDuration().minus(standardOffset.toDuration()).normalized();",
                  "range": [
                    10814,
                    10905
                  ],
                  "loc": {
                    "start": {
                      "line": 240,
                      "column": 8
                    },
                    "end": {
                      "line": 240,
                      "column": 99
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": "    }",
                  "range": [
                    10914,
                    10921
                  ],
                  "loc": {
                    "start": {
                      "line": 241,
                      "column": 8
                    },
                    "end": {
                      "line": 241,
                      "column": 15
                    }
                  }
                },
                {
                  "type": "Block",
                  "value": "*\n     * Checks if the specified instant is in daylight savings.\n     *\n     * This checks if the standard and actual offsets are the same at the specified instant.\n     *\n     * @param {Instant} instant - the instant to find the offset information for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {boolean} the standard offset, not null\n     ",
                  "range": [
                    10933,
                    11344
                  ],
                  "loc": {
                    "start": {
                      "line": 244,
                      "column": 4
                    },
                    "end": {
                      "line": 252,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    11349,
                    11391
                  ],
                  "loc": {
                    "start": {
                      "line": 253,
                      "column": 4
                    },
                    "end": {
                      "line": 253,
                      "column": 46
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Checks if the offset date-time is valid for these rules.\n     *\n     * To be valid, the local date-time must not be in a gap and the offset\n     * must match the valid offsets.\n     *\n     * @param {LocalDateTime} localDateTime - the date-time to check, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @param {ZoneOffset} offset - the offset to check, null returns false\n     * @return {boolean} true if the offset date-time is valid for these rules\n     ",
                  "range": [
                    11626,
                    12146
                  ],
                  "loc": {
                    "start": {
                      "line": 261,
                      "column": 4
                    },
                    "end": {
                      "line": 271,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    12151,
                    12193
                  ],
                  "loc": {
                    "start": {
                      "line": 272,
                      "column": 4
                    },
                    "end": {
                      "line": 272,
                      "column": 46
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "isValidOffset",
                "range": [
                  12198,
                  12211
                ],
                "loc": {
                  "start": {
                    "line": 273,
                    "column": 4
                  },
                  "end": {
                    "line": 273,
                    "column": 17
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "localDateTime",
                    "range": [
                      12212,
                      12225
                    ],
                    "loc": {
                      "start": {
                        "line": 273,
                        "column": 18
                      },
                      "end": {
                        "line": 273,
                        "column": 31
                      }
                    }
                  },
                  {
                    "type": "Identifier",
                    "name": "offset",
                    "range": [
                      12227,
                      12233
                    ],
                    "loc": {
                      "start": {
                        "line": 273,
                        "column": 33
                      },
                      "end": {
                        "line": 273,
                        "column": 39
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "abstractMethodFail",
                          "range": [
                            12244,
                            12262
                          ],
                          "loc": {
                            "start": {
                              "line": 274,
                              "column": 8
                            },
                            "end": {
                              "line": 274,
                              "column": 26
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "ZoneRules.isValidOffset",
                            "raw": "'ZoneRules.isValidOffset'",
                            "range": [
                              12263,
                              12288
                            ],
                            "loc": {
                              "start": {
                                "line": 274,
                                "column": 27
                              },
                              "end": {
                                "line": 274,
                                "column": 52
                              }
                            }
                          }
                        ],
                        "range": [
                          12244,
                          12289
                        ],
                        "loc": {
                          "start": {
                            "line": 274,
                            "column": 8
                          },
                          "end": {
                            "line": 274,
                            "column": 53
                          }
                        }
                      },
                      "range": [
                        12244,
                        12290
                      ],
                      "loc": {
                        "start": {
                          "line": 274,
                          "column": 8
                        },
                        "end": {
                          "line": 274,
                          "column": 54
                        }
                      }
                    }
                  ],
                  "range": [
                    12234,
                    12296
                  ],
                  "loc": {
                    "start": {
                      "line": 273,
                      "column": 40
                    },
                    "end": {
                      "line": 275,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  12211,
                  12296
                ],
                "loc": {
                  "start": {
                    "line": 273,
                    "column": 17
                  },
                  "end": {
                    "line": 275,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                12198,
                12296
              ],
              "loc": {
                "start": {
                  "line": 273,
                  "column": 4
                },
                "end": {
                  "line": 275,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Line",
                  "value": "    default {",
                  "range": [
                    11492,
                    11507
                  ],
                  "loc": {
                    "start": {
                      "line": 256,
                      "column": 8
                    },
                    "end": {
                      "line": 256,
                      "column": 23
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": "        return (getStandardOffset(instant).equals(getOffset(instant)) == false);",
                  "range": [
                    11516,
                    11598
                  ],
                  "loc": {
                    "start": {
                      "line": 257,
                      "column": 8
                    },
                    "end": {
                      "line": 257,
                      "column": 90
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": "    }",
                  "range": [
                    11607,
                    11614
                  ],
                  "loc": {
                    "start": {
                      "line": 258,
                      "column": 8
                    },
                    "end": {
                      "line": 258,
                      "column": 15
                    }
                  }
                },
                {
                  "type": "Block",
                  "value": "*\n     * Checks if the offset date-time is valid for these rules.\n     *\n     * To be valid, the local date-time must not be in a gap and the offset\n     * must match the valid offsets.\n     *\n     * @param {LocalDateTime} localDateTime - the date-time to check, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @param {ZoneOffset} offset - the offset to check, null returns false\n     * @return {boolean} true if the offset date-time is valid for these rules\n     ",
                  "range": [
                    11626,
                    12146
                  ],
                  "loc": {
                    "start": {
                      "line": 261,
                      "column": 4
                    },
                    "end": {
                      "line": 271,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    12151,
                    12193
                  ],
                  "loc": {
                    "start": {
                      "line": 272,
                      "column": 4
                    },
                    "end": {
                      "line": 272,
                      "column": 46
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Line",
                  "value": "-----------------------------------------------------------------------",
                  "range": [
                    12302,
                    12375
                  ],
                  "loc": {
                    "start": {
                      "line": 277,
                      "column": 4
                    },
                    "end": {
                      "line": 277,
                      "column": 77
                    }
                  }
                },
                {
                  "type": "Block",
                  "value": "*\n     * Gets the next transition after the specified instant.\n     *\n     * This returns details of the next transition after the specified instant.\n     * For example, if the instant represents a point where \"Summer\" daylight savings time\n     * applies, then the method will return the transition to the next \"Winter\" time.\n     *\n     * @param {Instant} instant - the instant to get the next transition after, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffsetTransition} the next transition after the specified instant, null if this is after the last transition\n     ",
                  "range": [
                    12380,
                    13025
                  ],
                  "loc": {
                    "start": {
                      "line": 278,
                      "column": 4
                    },
                    "end": {
                      "line": 288,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    13030,
                    13072
                  ],
                  "loc": {
                    "start": {
                      "line": 289,
                      "column": 4
                    },
                    "end": {
                      "line": 289,
                      "column": 46
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "nextTransition",
                "range": [
                  13077,
                  13091
                ],
                "loc": {
                  "start": {
                    "line": 290,
                    "column": 4
                  },
                  "end": {
                    "line": 290,
                    "column": 18
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "instant",
                    "range": [
                      13092,
                      13099
                    ],
                    "loc": {
                      "start": {
                        "line": 290,
                        "column": 19
                      },
                      "end": {
                        "line": 290,
                        "column": 26
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "abstractMethodFail",
                          "range": [
                            13110,
                            13128
                          ],
                          "loc": {
                            "start": {
                              "line": 291,
                              "column": 8
                            },
                            "end": {
                              "line": 291,
                              "column": 26
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "ZoneRules.nextTransition",
                            "raw": "'ZoneRules.nextTransition'",
                            "range": [
                              13129,
                              13155
                            ],
                            "loc": {
                              "start": {
                                "line": 291,
                                "column": 27
                              },
                              "end": {
                                "line": 291,
                                "column": 53
                              }
                            }
                          }
                        ],
                        "range": [
                          13110,
                          13156
                        ],
                        "loc": {
                          "start": {
                            "line": 291,
                            "column": 8
                          },
                          "end": {
                            "line": 291,
                            "column": 54
                          }
                        }
                      },
                      "range": [
                        13110,
                        13157
                      ],
                      "loc": {
                        "start": {
                          "line": 291,
                          "column": 8
                        },
                        "end": {
                          "line": 291,
                          "column": 55
                        }
                      }
                    }
                  ],
                  "range": [
                    13100,
                    13163
                  ],
                  "loc": {
                    "start": {
                      "line": 290,
                      "column": 27
                    },
                    "end": {
                      "line": 292,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  13091,
                  13163
                ],
                "loc": {
                  "start": {
                    "line": 290,
                    "column": 18
                  },
                  "end": {
                    "line": 292,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                13077,
                13163
              ],
              "loc": {
                "start": {
                  "line": 290,
                  "column": 4
                },
                "end": {
                  "line": 292,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Line",
                  "value": "-----------------------------------------------------------------------",
                  "range": [
                    12302,
                    12375
                  ],
                  "loc": {
                    "start": {
                      "line": 277,
                      "column": 4
                    },
                    "end": {
                      "line": 277,
                      "column": 77
                    }
                  }
                },
                {
                  "type": "Block",
                  "value": "*\n     * Gets the next transition after the specified instant.\n     *\n     * This returns details of the next transition after the specified instant.\n     * For example, if the instant represents a point where \"Summer\" daylight savings time\n     * applies, then the method will return the transition to the next \"Winter\" time.\n     *\n     * @param {Instant} instant - the instant to get the next transition after, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffsetTransition} the next transition after the specified instant, null if this is after the last transition\n     ",
                  "range": [
                    12380,
                    13025
                  ],
                  "loc": {
                    "start": {
                      "line": 278,
                      "column": 4
                    },
                    "end": {
                      "line": 288,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    13030,
                    13072
                  ],
                  "loc": {
                    "start": {
                      "line": 289,
                      "column": 4
                    },
                    "end": {
                      "line": 289,
                      "column": 46
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Gets the previous transition before the specified instant.\n     *\n     * This returns details of the previous transition after the specified instant.\n     * For example, if the instant represents a point where \"summer\" daylight saving time\n     * applies, then the method will return the transition from the previous \"winter\" time.\n     *\n     * @param {Instant} instant - the instant to get the previous transition after, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffsetTransition} the previous transition after the specified instant, null if this is before the first transition\n     ",
                  "range": [
                    13169,
                    13838
                  ],
                  "loc": {
                    "start": {
                      "line": 294,
                      "column": 4
                    },
                    "end": {
                      "line": 304,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    13843,
                    13885
                  ],
                  "loc": {
                    "start": {
                      "line": 305,
                      "column": 4
                    },
                    "end": {
                      "line": 305,
                      "column": 46
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "previousTransition",
                "range": [
                  13890,
                  13908
                ],
                "loc": {
                  "start": {
                    "line": 306,
                    "column": 4
                  },
                  "end": {
                    "line": 306,
                    "column": 22
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "instant",
                    "range": [
                      13909,
                      13916
                    ],
                    "loc": {
                      "start": {
                        "line": 306,
                        "column": 23
                      },
                      "end": {
                        "line": 306,
                        "column": 30
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "abstractMethodFail",
                          "range": [
                            13927,
                            13945
                          ],
                          "loc": {
                            "start": {
                              "line": 307,
                              "column": 8
                            },
                            "end": {
                              "line": 307,
                              "column": 26
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "ZoneRules.previousTransition",
                            "raw": "'ZoneRules.previousTransition'",
                            "range": [
                              13946,
                              13976
                            ],
                            "loc": {
                              "start": {
                                "line": 307,
                                "column": 27
                              },
                              "end": {
                                "line": 307,
                                "column": 57
                              }
                            }
                          }
                        ],
                        "range": [
                          13927,
                          13977
                        ],
                        "loc": {
                          "start": {
                            "line": 307,
                            "column": 8
                          },
                          "end": {
                            "line": 307,
                            "column": 58
                          }
                        }
                      },
                      "range": [
                        13927,
                        13978
                      ],
                      "loc": {
                        "start": {
                          "line": 307,
                          "column": 8
                        },
                        "end": {
                          "line": 307,
                          "column": 59
                        }
                      }
                    }
                  ],
                  "range": [
                    13917,
                    13984
                  ],
                  "loc": {
                    "start": {
                      "line": 306,
                      "column": 31
                    },
                    "end": {
                      "line": 308,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  13908,
                  13984
                ],
                "loc": {
                  "start": {
                    "line": 306,
                    "column": 22
                  },
                  "end": {
                    "line": 308,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                13890,
                13984
              ],
              "loc": {
                "start": {
                  "line": 306,
                  "column": 4
                },
                "end": {
                  "line": 308,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Gets the previous transition before the specified instant.\n     *\n     * This returns details of the previous transition after the specified instant.\n     * For example, if the instant represents a point where \"summer\" daylight saving time\n     * applies, then the method will return the transition from the previous \"winter\" time.\n     *\n     * @param {Instant} instant - the instant to get the previous transition after, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffsetTransition} the previous transition after the specified instant, null if this is before the first transition\n     ",
                  "range": [
                    13169,
                    13838
                  ],
                  "loc": {
                    "start": {
                      "line": 294,
                      "column": 4
                    },
                    "end": {
                      "line": 304,
                      "column": 7
                    }
                  }
                },
                {
                  "type": "Line",
                  "value": " eslint-disable-next-line no-unused-vars",
                  "range": [
                    13843,
                    13885
                  ],
                  "loc": {
                    "start": {
                      "line": 305,
                      "column": 4
                    },
                    "end": {
                      "line": 305,
                      "column": 46
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Gets the complete list of fully defined transitions.\n     *\n     * The complete set of transitions for this rules instance is defined by this method\n     * and {@link getTransitionRules}. This method returns those transitions that have\n     * been fully defined. These are typically historical, but may be in the future.\n     *\n     * The list will be empty for fixed offset rules and for any time-zone where there has\n     * only ever been a single offset. The list will also be empty if the transition rules are unknown.\n     *\n     * @return {ZoneOffsetTransition[]} an immutable list of fully defined transitions, not null\n     ",
                  "range": [
                    13990,
                    14635
                  ],
                  "loc": {
                    "start": {
                      "line": 310,
                      "column": 4
                    },
                    "end": {
                      "line": 321,
                      "column": 7
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "transitions",
                "range": [
                  14640,
                  14651
                ],
                "loc": {
                  "start": {
                    "line": 322,
                    "column": 4
                  },
                  "end": {
                    "line": 322,
                    "column": 15
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "abstractMethodFail",
                          "range": [
                            14663,
                            14681
                          ],
                          "loc": {
                            "start": {
                              "line": 323,
                              "column": 8
                            },
                            "end": {
                              "line": 323,
                              "column": 26
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "ZoneRules.transitions",
                            "raw": "'ZoneRules.transitions'",
                            "range": [
                              14682,
                              14705
                            ],
                            "loc": {
                              "start": {
                                "line": 323,
                                "column": 27
                              },
                              "end": {
                                "line": 323,
                                "column": 50
                              }
                            }
                          }
                        ],
                        "range": [
                          14663,
                          14706
                        ],
                        "loc": {
                          "start": {
                            "line": 323,
                            "column": 8
                          },
                          "end": {
                            "line": 323,
                            "column": 51
                          }
                        }
                      },
                      "range": [
                        14663,
                        14707
                      ],
                      "loc": {
                        "start": {
                          "line": 323,
                          "column": 8
                        },
                        "end": {
                          "line": 323,
                          "column": 52
                        }
                      }
                    }
                  ],
                  "range": [
                    14653,
                    14713
                  ],
                  "loc": {
                    "start": {
                      "line": 322,
                      "column": 17
                    },
                    "end": {
                      "line": 324,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  14651,
                  14713
                ],
                "loc": {
                  "start": {
                    "line": 322,
                    "column": 15
                  },
                  "end": {
                    "line": 324,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                14640,
                14713
              ],
              "loc": {
                "start": {
                  "line": 322,
                  "column": 4
                },
                "end": {
                  "line": 324,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Gets the complete list of fully defined transitions.\n     *\n     * The complete set of transitions for this rules instance is defined by this method\n     * and {@link getTransitionRules}. This method returns those transitions that have\n     * been fully defined. These are typically historical, but may be in the future.\n     *\n     * The list will be empty for fixed offset rules and for any time-zone where there has\n     * only ever been a single offset. The list will also be empty if the transition rules are unknown.\n     *\n     * @return {ZoneOffsetTransition[]} an immutable list of fully defined transitions, not null\n     ",
                  "range": [
                    13990,
                    14635
                  ],
                  "loc": {
                    "start": {
                      "line": 310,
                      "column": 4
                    },
                    "end": {
                      "line": 321,
                      "column": 7
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Gets the list of transition rules for years beyond those defined in the transition list.\n     *\n     * The complete set of transitions for this rules instance is defined by this method\n     * and {@link getTransitions}. This method returns instances of {@link ZoneOffsetTransitionRule}\n     * that define an algorithm for when transitions will occur.\n     *\n     * For any given {@link ZoneRules}, this list contains the transition rules for years\n     * beyond those years that have been fully defined. These rules typically refer to future\n     * daylight saving time rule changes.\n     *\n     * If the zone defines daylight savings into the future, then the list will normally\n     * be of size two and hold information about entering and exiting daylight savings.\n     * If the zone does not have daylight savings, or information about future changes\n     * is uncertain, then the list will be empty.\n     *\n     * The list will be empty for fixed offset rules and for any time-zone where there is no\n     * daylight saving time. The list will also be empty if the transition rules are unknown.\n     *\n     * @return {ZoneOffsetTransitionRule[]} an immutable list of transition rules, not null\n     ",
                  "range": [
                    14719,
                    15935
                  ],
                  "loc": {
                    "start": {
                      "line": 326,
                      "column": 4
                    },
                    "end": {
                      "line": 346,
                      "column": 7
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "transitionRules",
                "range": [
                  15940,
                  15955
                ],
                "loc": {
                  "start": {
                    "line": 347,
                    "column": 4
                  },
                  "end": {
                    "line": 347,
                    "column": 19
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "abstractMethodFail",
                          "range": [
                            15967,
                            15985
                          ],
                          "loc": {
                            "start": {
                              "line": 348,
                              "column": 8
                            },
                            "end": {
                              "line": 348,
                              "column": 26
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "ZoneRules.transitionRules",
                            "raw": "'ZoneRules.transitionRules'",
                            "range": [
                              15986,
                              16013
                            ],
                            "loc": {
                              "start": {
                                "line": 348,
                                "column": 27
                              },
                              "end": {
                                "line": 348,
                                "column": 54
                              }
                            }
                          }
                        ],
                        "range": [
                          15967,
                          16014
                        ],
                        "loc": {
                          "start": {
                            "line": 348,
                            "column": 8
                          },
                          "end": {
                            "line": 348,
                            "column": 55
                          }
                        }
                      },
                      "range": [
                        15967,
                        16015
                      ],
                      "loc": {
                        "start": {
                          "line": 348,
                          "column": 8
                        },
                        "end": {
                          "line": 348,
                          "column": 56
                        }
                      }
                    }
                  ],
                  "range": [
                    15957,
                    16021
                  ],
                  "loc": {
                    "start": {
                      "line": 347,
                      "column": 21
                    },
                    "end": {
                      "line": 349,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  15955,
                  16021
                ],
                "loc": {
                  "start": {
                    "line": 347,
                    "column": 19
                  },
                  "end": {
                    "line": 349,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                15940,
                16021
              ],
              "loc": {
                "start": {
                  "line": 347,
                  "column": 4
                },
                "end": {
                  "line": 349,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Gets the list of transition rules for years beyond those defined in the transition list.\n     *\n     * The complete set of transitions for this rules instance is defined by this method\n     * and {@link getTransitions}. This method returns instances of {@link ZoneOffsetTransitionRule}\n     * that define an algorithm for when transitions will occur.\n     *\n     * For any given {@link ZoneRules}, this list contains the transition rules for years\n     * beyond those years that have been fully defined. These rules typically refer to future\n     * daylight saving time rule changes.\n     *\n     * If the zone defines daylight savings into the future, then the list will normally\n     * be of size two and hold information about entering and exiting daylight savings.\n     * If the zone does not have daylight savings, or information about future changes\n     * is uncertain, then the list will be empty.\n     *\n     * The list will be empty for fixed offset rules and for any time-zone where there is no\n     * daylight saving time. The list will also be empty if the transition rules are unknown.\n     *\n     * @return {ZoneOffsetTransitionRule[]} an immutable list of transition rules, not null\n     ",
                  "range": [
                    14719,
                    15935
                  ],
                  "loc": {
                    "start": {
                      "line": 326,
                      "column": 4
                    },
                    "end": {
                      "line": 346,
                      "column": 7
                    }
                  }
                }
              ],
              "static": false
            }
          ],
          "range": [
            390,
            16023
          ],
          "loc": {
            "start": {
              "line": 12,
              "column": 23
            },
            "end": {
              "line": 350,
              "column": 1
            }
          }
        },
        "range": [
          374,
          16023
        ],
        "loc": {
          "start": {
            "line": 12,
            "column": 7
          },
          "end": {
            "line": 350,
            "column": 1
          }
        },
        "leadingComments": [],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        367,
        16023
      ],
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 350,
          "column": 1
        }
      }
    },
    {
      "type": "ClassDeclaration",
      "id": {
        "type": "Identifier",
        "name": "Fixed",
        "range": [
          16032,
          16037
        ],
        "loc": {
          "start": {
            "line": 353,
            "column": 6
          },
          "end": {
            "line": 353,
            "column": 11
          }
        }
      },
      "superClass": {
        "type": "Identifier",
        "name": "ZoneRules",
        "range": [
          16046,
          16055
        ],
        "loc": {
          "start": {
            "line": 353,
            "column": 20
          },
          "end": {
            "line": 353,
            "column": 29
          }
        }
      },
      "body": {
        "type": "ClassBody",
        "body": [
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "constructor",
              "range": [
                16118,
                16129
              ],
              "loc": {
                "start": {
                  "line": 358,
                  "column": 4
                },
                "end": {
                  "line": 358,
                  "column": 15
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "offset",
                  "range": [
                    16130,
                    16136
                  ],
                  "loc": {
                    "start": {
                      "line": 358,
                      "column": 16
                    },
                    "end": {
                      "line": 358,
                      "column": 22
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Super",
                        "range": [
                          16147,
                          16152
                        ],
                        "loc": {
                          "start": {
                            "line": 359,
                            "column": 8
                          },
                          "end": {
                            "line": 359,
                            "column": 13
                          }
                        }
                      },
                      "arguments": [],
                      "range": [
                        16147,
                        16154
                      ],
                      "loc": {
                        "start": {
                          "line": 359,
                          "column": 8
                        },
                        "end": {
                          "line": 359,
                          "column": 15
                        }
                      }
                    },
                    "range": [
                      16147,
                      16155
                    ],
                    "loc": {
                      "start": {
                        "line": 359,
                        "column": 8
                      },
                      "end": {
                        "line": 359,
                        "column": 16
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression",
                          "range": [
                            16164,
                            16168
                          ],
                          "loc": {
                            "start": {
                              "line": 360,
                              "column": 8
                            },
                            "end": {
                              "line": 360,
                              "column": 12
                            }
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_offset",
                          "range": [
                            16169,
                            16176
                          ],
                          "loc": {
                            "start": {
                              "line": 360,
                              "column": 13
                            },
                            "end": {
                              "line": 360,
                              "column": 20
                            }
                          }
                        },
                        "range": [
                          16164,
                          16176
                        ],
                        "loc": {
                          "start": {
                            "line": 360,
                            "column": 8
                          },
                          "end": {
                            "line": 360,
                            "column": 20
                          }
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "offset",
                        "range": [
                          16179,
                          16185
                        ],
                        "loc": {
                          "start": {
                            "line": 360,
                            "column": 23
                          },
                          "end": {
                            "line": 360,
                            "column": 29
                          }
                        }
                      },
                      "range": [
                        16164,
                        16185
                      ],
                      "loc": {
                        "start": {
                          "line": 360,
                          "column": 8
                        },
                        "end": {
                          "line": 360,
                          "column": 29
                        }
                      }
                    },
                    "range": [
                      16164,
                      16186
                    ],
                    "loc": {
                      "start": {
                        "line": 360,
                        "column": 8
                      },
                      "end": {
                        "line": 360,
                        "column": 30
                      }
                    }
                  }
                ],
                "range": [
                  16137,
                  16192
                ],
                "loc": {
                  "start": {
                    "line": 358,
                    "column": 23
                  },
                  "end": {
                    "line": 361,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                16129,
                16192
              ],
              "loc": {
                "start": {
                  "line": 358,
                  "column": 15
                },
                "end": {
                  "line": 361,
                  "column": 5
                }
              }
            },
            "kind": "constructor",
            "computed": false,
            "range": [
              16118,
              16192
            ],
            "loc": {
              "start": {
                "line": 358,
                "column": 4
              },
              "end": {
                "line": 361,
                "column": 5
              }
            },
            "leadingComments": [
              {
                "type": "Block",
                "value": "*\n     *\n     * @param {ZoneOffset} offset\n     ",
                "range": [
                  16061,
                  16113
                ],
                "loc": {
                  "start": {
                    "line": 354,
                    "column": 4
                  },
                  "end": {
                    "line": 357,
                    "column": 7
                  }
                }
              }
            ],
            "static": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "isFixedOffset",
              "range": [
                16198,
                16211
              ],
              "loc": {
                "start": {
                  "line": 363,
                  "column": 4
                },
                "end": {
                  "line": 363,
                  "column": 17
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": true,
                      "raw": "true",
                      "range": [
                        16230,
                        16234
                      ],
                      "loc": {
                        "start": {
                          "line": 364,
                          "column": 15
                        },
                        "end": {
                          "line": 364,
                          "column": 19
                        }
                      }
                    },
                    "range": [
                      16223,
                      16235
                    ],
                    "loc": {
                      "start": {
                        "line": 364,
                        "column": 8
                      },
                      "end": {
                        "line": 364,
                        "column": 20
                      }
                    }
                  }
                ],
                "range": [
                  16213,
                  16241
                ],
                "loc": {
                  "start": {
                    "line": 363,
                    "column": 19
                  },
                  "end": {
                    "line": 365,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                16211,
                16241
              ],
              "loc": {
                "start": {
                  "line": 363,
                  "column": 17
                },
                "end": {
                  "line": 365,
                  "column": 5
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              16198,
              16241
            ],
            "loc": {
              "start": {
                "line": 363,
                "column": 4
              },
              "end": {
                "line": 365,
                "column": 5
              }
            },
            "static": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "offsetOfInstant",
              "range": [
                16247,
                16262
              ],
              "loc": {
                "start": {
                  "line": 367,
                  "column": 4
                },
                "end": {
                  "line": 367,
                  "column": 19
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression",
                        "range": [
                          16281,
                          16285
                        ],
                        "loc": {
                          "start": {
                            "line": 368,
                            "column": 15
                          },
                          "end": {
                            "line": 368,
                            "column": 19
                          }
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_offset",
                        "range": [
                          16286,
                          16293
                        ],
                        "loc": {
                          "start": {
                            "line": 368,
                            "column": 20
                          },
                          "end": {
                            "line": 368,
                            "column": 27
                          }
                        }
                      },
                      "range": [
                        16281,
                        16293
                      ],
                      "loc": {
                        "start": {
                          "line": 368,
                          "column": 15
                        },
                        "end": {
                          "line": 368,
                          "column": 27
                        }
                      }
                    },
                    "range": [
                      16274,
                      16294
                    ],
                    "loc": {
                      "start": {
                        "line": 368,
                        "column": 8
                      },
                      "end": {
                        "line": 368,
                        "column": 28
                      }
                    }
                  }
                ],
                "range": [
                  16264,
                  16300
                ],
                "loc": {
                  "start": {
                    "line": 367,
                    "column": 21
                  },
                  "end": {
                    "line": 369,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                16262,
                16300
              ],
              "loc": {
                "start": {
                  "line": 367,
                  "column": 19
                },
                "end": {
                  "line": 369,
                  "column": 5
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              16247,
              16300
            ],
            "loc": {
              "start": {
                "line": 367,
                "column": 4
              },
              "end": {
                "line": 369,
                "column": 5
              }
            },
            "static": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "offsetOfEpochMilli",
              "range": [
                16306,
                16324
              ],
              "loc": {
                "start": {
                  "line": 371,
                  "column": 4
                },
                "end": {
                  "line": 371,
                  "column": 22
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression",
                        "range": [
                          16343,
                          16347
                        ],
                        "loc": {
                          "start": {
                            "line": 372,
                            "column": 15
                          },
                          "end": {
                            "line": 372,
                            "column": 19
                          }
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_offset",
                        "range": [
                          16348,
                          16355
                        ],
                        "loc": {
                          "start": {
                            "line": 372,
                            "column": 20
                          },
                          "end": {
                            "line": 372,
                            "column": 27
                          }
                        }
                      },
                      "range": [
                        16343,
                        16355
                      ],
                      "loc": {
                        "start": {
                          "line": 372,
                          "column": 15
                        },
                        "end": {
                          "line": 372,
                          "column": 27
                        }
                      }
                    },
                    "range": [
                      16336,
                      16356
                    ],
                    "loc": {
                      "start": {
                        "line": 372,
                        "column": 8
                      },
                      "end": {
                        "line": 372,
                        "column": 28
                      }
                    }
                  }
                ],
                "range": [
                  16326,
                  16362
                ],
                "loc": {
                  "start": {
                    "line": 371,
                    "column": 24
                  },
                  "end": {
                    "line": 373,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                16324,
                16362
              ],
              "loc": {
                "start": {
                  "line": 371,
                  "column": 22
                },
                "end": {
                  "line": 373,
                  "column": 5
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              16306,
              16362
            ],
            "loc": {
              "start": {
                "line": 371,
                "column": 4
              },
              "end": {
                "line": 373,
                "column": 5
              }
            },
            "static": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "offsetOfLocalDateTime",
              "range": [
                16368,
                16389
              ],
              "loc": {
                "start": {
                  "line": 375,
                  "column": 4
                },
                "end": {
                  "line": 375,
                  "column": 25
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression",
                        "range": [
                          16408,
                          16412
                        ],
                        "loc": {
                          "start": {
                            "line": 376,
                            "column": 15
                          },
                          "end": {
                            "line": 376,
                            "column": 19
                          }
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_offset",
                        "range": [
                          16413,
                          16420
                        ],
                        "loc": {
                          "start": {
                            "line": 376,
                            "column": 20
                          },
                          "end": {
                            "line": 376,
                            "column": 27
                          }
                        }
                      },
                      "range": [
                        16408,
                        16420
                      ],
                      "loc": {
                        "start": {
                          "line": 376,
                          "column": 15
                        },
                        "end": {
                          "line": 376,
                          "column": 27
                        }
                      }
                    },
                    "range": [
                      16401,
                      16421
                    ],
                    "loc": {
                      "start": {
                        "line": 376,
                        "column": 8
                      },
                      "end": {
                        "line": 376,
                        "column": 28
                      }
                    }
                  }
                ],
                "range": [
                  16391,
                  16427
                ],
                "loc": {
                  "start": {
                    "line": 375,
                    "column": 27
                  },
                  "end": {
                    "line": 377,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                16389,
                16427
              ],
              "loc": {
                "start": {
                  "line": 375,
                  "column": 25
                },
                "end": {
                  "line": 377,
                  "column": 5
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              16368,
              16427
            ],
            "loc": {
              "start": {
                "line": 375,
                "column": 4
              },
              "end": {
                "line": 377,
                "column": 5
              }
            },
            "static": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "validOffsets",
              "range": [
                16433,
                16445
              ],
              "loc": {
                "start": {
                  "line": 379,
                  "column": 4
                },
                "end": {
                  "line": 379,
                  "column": 16
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "ArrayExpression",
                      "elements": [
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression",
                            "range": [
                              16465,
                              16469
                            ],
                            "loc": {
                              "start": {
                                "line": 380,
                                "column": 16
                              },
                              "end": {
                                "line": 380,
                                "column": 20
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_offset",
                            "range": [
                              16470,
                              16477
                            ],
                            "loc": {
                              "start": {
                                "line": 380,
                                "column": 21
                              },
                              "end": {
                                "line": 380,
                                "column": 28
                              }
                            }
                          },
                          "range": [
                            16465,
                            16477
                          ],
                          "loc": {
                            "start": {
                              "line": 380,
                              "column": 16
                            },
                            "end": {
                              "line": 380,
                              "column": 28
                            }
                          }
                        }
                      ],
                      "range": [
                        16464,
                        16478
                      ],
                      "loc": {
                        "start": {
                          "line": 380,
                          "column": 15
                        },
                        "end": {
                          "line": 380,
                          "column": 29
                        }
                      }
                    },
                    "range": [
                      16457,
                      16479
                    ],
                    "loc": {
                      "start": {
                        "line": 380,
                        "column": 8
                      },
                      "end": {
                        "line": 380,
                        "column": 30
                      }
                    }
                  }
                ],
                "range": [
                  16447,
                  16485
                ],
                "loc": {
                  "start": {
                    "line": 379,
                    "column": 18
                  },
                  "end": {
                    "line": 381,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                16445,
                16485
              ],
              "loc": {
                "start": {
                  "line": 379,
                  "column": 16
                },
                "end": {
                  "line": 381,
                  "column": 5
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              16433,
              16485
            ],
            "loc": {
              "start": {
                "line": 379,
                "column": 4
              },
              "end": {
                "line": 381,
                "column": 5
              }
            },
            "static": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "transition",
              "range": [
                16491,
                16501
              ],
              "loc": {
                "start": {
                  "line": 383,
                  "column": 4
                },
                "end": {
                  "line": 383,
                  "column": 14
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": null,
                      "raw": "null",
                      "range": [
                        16520,
                        16524
                      ],
                      "loc": {
                        "start": {
                          "line": 384,
                          "column": 15
                        },
                        "end": {
                          "line": 384,
                          "column": 19
                        }
                      }
                    },
                    "range": [
                      16513,
                      16525
                    ],
                    "loc": {
                      "start": {
                        "line": 384,
                        "column": 8
                      },
                      "end": {
                        "line": 384,
                        "column": 20
                      }
                    }
                  }
                ],
                "range": [
                  16503,
                  16531
                ],
                "loc": {
                  "start": {
                    "line": 383,
                    "column": 16
                  },
                  "end": {
                    "line": 385,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                16501,
                16531
              ],
              "loc": {
                "start": {
                  "line": 383,
                  "column": 14
                },
                "end": {
                  "line": 385,
                  "column": 5
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              16491,
              16531
            ],
            "loc": {
              "start": {
                "line": 383,
                "column": 4
              },
              "end": {
                "line": 385,
                "column": 5
              }
            },
            "static": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "standardOffset",
              "range": [
                16537,
                16551
              ],
              "loc": {
                "start": {
                  "line": 387,
                  "column": 4
                },
                "end": {
                  "line": 387,
                  "column": 18
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression",
                        "range": [
                          16570,
                          16574
                        ],
                        "loc": {
                          "start": {
                            "line": 388,
                            "column": 15
                          },
                          "end": {
                            "line": 388,
                            "column": 19
                          }
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_offset",
                        "range": [
                          16575,
                          16582
                        ],
                        "loc": {
                          "start": {
                            "line": 388,
                            "column": 20
                          },
                          "end": {
                            "line": 388,
                            "column": 27
                          }
                        }
                      },
                      "range": [
                        16570,
                        16582
                      ],
                      "loc": {
                        "start": {
                          "line": 388,
                          "column": 15
                        },
                        "end": {
                          "line": 388,
                          "column": 27
                        }
                      }
                    },
                    "range": [
                      16563,
                      16583
                    ],
                    "loc": {
                      "start": {
                        "line": 388,
                        "column": 8
                      },
                      "end": {
                        "line": 388,
                        "column": 28
                      }
                    }
                  }
                ],
                "range": [
                  16553,
                  16589
                ],
                "loc": {
                  "start": {
                    "line": 387,
                    "column": 20
                  },
                  "end": {
                    "line": 389,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                16551,
                16589
              ],
              "loc": {
                "start": {
                  "line": 387,
                  "column": 18
                },
                "end": {
                  "line": 389,
                  "column": 5
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              16537,
              16589
            ],
            "loc": {
              "start": {
                "line": 387,
                "column": 4
              },
              "end": {
                "line": 389,
                "column": 5
              }
            },
            "static": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "daylightSavings",
              "range": [
                16595,
                16610
              ],
              "loc": {
                "start": {
                  "line": 391,
                  "column": 4
                },
                "end": {
                  "line": 391,
                  "column": 19
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Duration",
                        "range": [
                          16629,
                          16637
                        ],
                        "loc": {
                          "start": {
                            "line": 392,
                            "column": 15
                          },
                          "end": {
                            "line": 392,
                            "column": 23
                          }
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "ZERO",
                        "range": [
                          16638,
                          16642
                        ],
                        "loc": {
                          "start": {
                            "line": 392,
                            "column": 24
                          },
                          "end": {
                            "line": 392,
                            "column": 28
                          }
                        }
                      },
                      "range": [
                        16629,
                        16642
                      ],
                      "loc": {
                        "start": {
                          "line": 392,
                          "column": 15
                        },
                        "end": {
                          "line": 392,
                          "column": 28
                        }
                      }
                    },
                    "range": [
                      16622,
                      16643
                    ],
                    "loc": {
                      "start": {
                        "line": 392,
                        "column": 8
                      },
                      "end": {
                        "line": 392,
                        "column": 29
                      }
                    }
                  }
                ],
                "range": [
                  16612,
                  16649
                ],
                "loc": {
                  "start": {
                    "line": 391,
                    "column": 21
                  },
                  "end": {
                    "line": 393,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                16610,
                16649
              ],
              "loc": {
                "start": {
                  "line": 391,
                  "column": 19
                },
                "end": {
                  "line": 393,
                  "column": 5
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              16595,
              16649
            ],
            "loc": {
              "start": {
                "line": 391,
                "column": 4
              },
              "end": {
                "line": 393,
                "column": 5
              }
            },
            "static": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "isDaylightSavings",
              "range": [
                16655,
                16672
              ],
              "loc": {
                "start": {
                  "line": 395,
                  "column": 4
                },
                "end": {
                  "line": 395,
                  "column": 21
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "range": [
                        16691,
                        16696
                      ],
                      "loc": {
                        "start": {
                          "line": 396,
                          "column": 15
                        },
                        "end": {
                          "line": 396,
                          "column": 20
                        }
                      }
                    },
                    "range": [
                      16684,
                      16697
                    ],
                    "loc": {
                      "start": {
                        "line": 396,
                        "column": 8
                      },
                      "end": {
                        "line": 396,
                        "column": 21
                      }
                    }
                  }
                ],
                "range": [
                  16674,
                  16703
                ],
                "loc": {
                  "start": {
                    "line": 395,
                    "column": 23
                  },
                  "end": {
                    "line": 397,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                16672,
                16703
              ],
              "loc": {
                "start": {
                  "line": 395,
                  "column": 21
                },
                "end": {
                  "line": 397,
                  "column": 5
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              16655,
              16703
            ],
            "loc": {
              "start": {
                "line": 395,
                "column": 4
              },
              "end": {
                "line": 397,
                "column": 5
              }
            },
            "trailingComments": [
              {
                "type": "Block",
                "value": "*\n     *\n     * @param {LocalDateTime} LocalDateTime\n     * @param {ZoneOffset} offset\n     * @return {boolean}\n     ",
                "range": [
                  16709,
                  16830
                ],
                "loc": {
                  "start": {
                    "line": 399,
                    "column": 4
                  },
                  "end": {
                    "line": 404,
                    "column": 7
                  }
                }
              }
            ],
            "static": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "isValidOffset",
              "range": [
                16835,
                16848
              ],
              "loc": {
                "start": {
                  "line": 405,
                  "column": 4
                },
                "end": {
                  "line": 405,
                  "column": 17
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "dateTime",
                  "range": [
                    16849,
                    16857
                  ],
                  "loc": {
                    "start": {
                      "line": 405,
                      "column": 18
                    },
                    "end": {
                      "line": 405,
                      "column": 26
                    }
                  }
                },
                {
                  "type": "Identifier",
                  "name": "offset",
                  "range": [
                    16859,
                    16865
                  ],
                  "loc": {
                    "start": {
                      "line": 405,
                      "column": 28
                    },
                    "end": {
                      "line": 405,
                      "column": 34
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression",
                            "range": [
                              16884,
                              16888
                            ],
                            "loc": {
                              "start": {
                                "line": 406,
                                "column": 15
                              },
                              "end": {
                                "line": 406,
                                "column": 19
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_offset",
                            "range": [
                              16889,
                              16896
                            ],
                            "loc": {
                              "start": {
                                "line": 406,
                                "column": 20
                              },
                              "end": {
                                "line": 406,
                                "column": 27
                              }
                            }
                          },
                          "range": [
                            16884,
                            16896
                          ],
                          "loc": {
                            "start": {
                              "line": 406,
                              "column": 15
                            },
                            "end": {
                              "line": 406,
                              "column": 27
                            }
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "equals",
                          "range": [
                            16897,
                            16903
                          ],
                          "loc": {
                            "start": {
                              "line": 406,
                              "column": 28
                            },
                            "end": {
                              "line": 406,
                              "column": 34
                            }
                          }
                        },
                        "range": [
                          16884,
                          16903
                        ],
                        "loc": {
                          "start": {
                            "line": 406,
                            "column": 15
                          },
                          "end": {
                            "line": 406,
                            "column": 34
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "offset",
                          "range": [
                            16904,
                            16910
                          ],
                          "loc": {
                            "start": {
                              "line": 406,
                              "column": 35
                            },
                            "end": {
                              "line": 406,
                              "column": 41
                            }
                          }
                        }
                      ],
                      "range": [
                        16884,
                        16911
                      ],
                      "loc": {
                        "start": {
                          "line": 406,
                          "column": 15
                        },
                        "end": {
                          "line": 406,
                          "column": 42
                        }
                      }
                    },
                    "range": [
                      16877,
                      16912
                    ],
                    "loc": {
                      "start": {
                        "line": 406,
                        "column": 8
                      },
                      "end": {
                        "line": 406,
                        "column": 43
                      }
                    }
                  }
                ],
                "range": [
                  16867,
                  16918
                ],
                "loc": {
                  "start": {
                    "line": 405,
                    "column": 36
                  },
                  "end": {
                    "line": 407,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                16848,
                16918
              ],
              "loc": {
                "start": {
                  "line": 405,
                  "column": 17
                },
                "end": {
                  "line": 407,
                  "column": 5
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              16835,
              16918
            ],
            "loc": {
              "start": {
                "line": 405,
                "column": 4
              },
              "end": {
                "line": 407,
                "column": 5
              }
            },
            "leadingComments": [
              {
                "type": "Block",
                "value": "*\n     *\n     * @param {LocalDateTime} LocalDateTime\n     * @param {ZoneOffset} offset\n     * @return {boolean}\n     ",
                "range": [
                  16709,
                  16830
                ],
                "loc": {
                  "start": {
                    "line": 399,
                    "column": 4
                  },
                  "end": {
                    "line": 404,
                    "column": 7
                  }
                }
              }
            ],
            "static": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "nextTransition",
              "range": [
                16924,
                16938
              ],
              "loc": {
                "start": {
                  "line": 409,
                  "column": 4
                },
                "end": {
                  "line": 409,
                  "column": 18
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": null,
                      "raw": "null",
                      "range": [
                        16957,
                        16961
                      ],
                      "loc": {
                        "start": {
                          "line": 410,
                          "column": 15
                        },
                        "end": {
                          "line": 410,
                          "column": 19
                        }
                      }
                    },
                    "range": [
                      16950,
                      16962
                    ],
                    "loc": {
                      "start": {
                        "line": 410,
                        "column": 8
                      },
                      "end": {
                        "line": 410,
                        "column": 20
                      }
                    }
                  }
                ],
                "range": [
                  16940,
                  16968
                ],
                "loc": {
                  "start": {
                    "line": 409,
                    "column": 20
                  },
                  "end": {
                    "line": 411,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                16938,
                16968
              ],
              "loc": {
                "start": {
                  "line": 409,
                  "column": 18
                },
                "end": {
                  "line": 411,
                  "column": 5
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              16924,
              16968
            ],
            "loc": {
              "start": {
                "line": 409,
                "column": 4
              },
              "end": {
                "line": 411,
                "column": 5
              }
            },
            "static": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "previousTransition",
              "range": [
                16974,
                16992
              ],
              "loc": {
                "start": {
                  "line": 413,
                  "column": 4
                },
                "end": {
                  "line": 413,
                  "column": 22
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": null,
                      "raw": "null",
                      "range": [
                        17011,
                        17015
                      ],
                      "loc": {
                        "start": {
                          "line": 414,
                          "column": 15
                        },
                        "end": {
                          "line": 414,
                          "column": 19
                        }
                      }
                    },
                    "range": [
                      17004,
                      17016
                    ],
                    "loc": {
                      "start": {
                        "line": 414,
                        "column": 8
                      },
                      "end": {
                        "line": 414,
                        "column": 20
                      }
                    }
                  }
                ],
                "range": [
                  16994,
                  17022
                ],
                "loc": {
                  "start": {
                    "line": 413,
                    "column": 24
                  },
                  "end": {
                    "line": 415,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                16992,
                17022
              ],
              "loc": {
                "start": {
                  "line": 413,
                  "column": 22
                },
                "end": {
                  "line": 415,
                  "column": 5
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              16974,
              17022
            ],
            "loc": {
              "start": {
                "line": 413,
                "column": 4
              },
              "end": {
                "line": 415,
                "column": 5
              }
            },
            "static": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "transitions",
              "range": [
                17028,
                17039
              ],
              "loc": {
                "start": {
                  "line": 417,
                  "column": 4
                },
                "end": {
                  "line": 417,
                  "column": 15
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "ArrayExpression",
                      "elements": [],
                      "range": [
                        17058,
                        17060
                      ],
                      "loc": {
                        "start": {
                          "line": 418,
                          "column": 15
                        },
                        "end": {
                          "line": 418,
                          "column": 17
                        }
                      }
                    },
                    "range": [
                      17051,
                      17061
                    ],
                    "loc": {
                      "start": {
                        "line": 418,
                        "column": 8
                      },
                      "end": {
                        "line": 418,
                        "column": 18
                      }
                    }
                  }
                ],
                "range": [
                  17041,
                  17067
                ],
                "loc": {
                  "start": {
                    "line": 417,
                    "column": 17
                  },
                  "end": {
                    "line": 419,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                17039,
                17067
              ],
              "loc": {
                "start": {
                  "line": 417,
                  "column": 15
                },
                "end": {
                  "line": 419,
                  "column": 5
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              17028,
              17067
            ],
            "loc": {
              "start": {
                "line": 417,
                "column": 4
              },
              "end": {
                "line": 419,
                "column": 5
              }
            },
            "static": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "transitionRules",
              "range": [
                17073,
                17088
              ],
              "loc": {
                "start": {
                  "line": 421,
                  "column": 4
                },
                "end": {
                  "line": 421,
                  "column": 19
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "ArrayExpression",
                      "elements": [],
                      "range": [
                        17107,
                        17109
                      ],
                      "loc": {
                        "start": {
                          "line": 422,
                          "column": 15
                        },
                        "end": {
                          "line": 422,
                          "column": 17
                        }
                      }
                    },
                    "range": [
                      17100,
                      17110
                    ],
                    "loc": {
                      "start": {
                        "line": 422,
                        "column": 8
                      },
                      "end": {
                        "line": 422,
                        "column": 18
                      }
                    }
                  }
                ],
                "range": [
                  17090,
                  17116
                ],
                "loc": {
                  "start": {
                    "line": 421,
                    "column": 21
                  },
                  "end": {
                    "line": 423,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                17088,
                17116
              ],
              "loc": {
                "start": {
                  "line": 421,
                  "column": 19
                },
                "end": {
                  "line": 423,
                  "column": 5
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              17073,
              17116
            ],
            "loc": {
              "start": {
                "line": 421,
                "column": 4
              },
              "end": {
                "line": 423,
                "column": 5
              }
            },
            "trailingComments": [
              {
                "type": "Line",
                "value": "-----------------------------------------------------------------------",
                "range": [
                  17122,
                  17195
                ],
                "loc": {
                  "start": {
                    "line": 425,
                    "column": 4
                  },
                  "end": {
                    "line": 425,
                    "column": 77
                  }
                }
              },
              {
                "type": "Block",
                "value": "*\n     *\n     * @param other\n     * @returns {boolean}\n     ",
                "range": [
                  17200,
                  17264
                ],
                "loc": {
                  "start": {
                    "line": 426,
                    "column": 4
                  },
                  "end": {
                    "line": 430,
                    "column": 7
                  }
                }
              }
            ],
            "static": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "equals",
              "range": [
                17269,
                17275
              ],
              "loc": {
                "start": {
                  "line": 431,
                  "column": 4
                },
                "end": {
                  "line": 431,
                  "column": 10
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "other",
                  "range": [
                    17276,
                    17281
                  ],
                  "loc": {
                    "start": {
                      "line": 431,
                      "column": 11
                    },
                    "end": {
                      "line": 431,
                      "column": 16
                    }
                  }
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "IfStatement",
                    "test": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "ThisExpression",
                        "range": [
                          17297,
                          17301
                        ],
                        "loc": {
                          "start": {
                            "line": 432,
                            "column": 12
                          },
                          "end": {
                            "line": 432,
                            "column": 16
                          }
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "other",
                        "range": [
                          17306,
                          17311
                        ],
                        "loc": {
                          "start": {
                            "line": 432,
                            "column": 21
                          },
                          "end": {
                            "line": 432,
                            "column": 26
                          }
                        }
                      },
                      "range": [
                        17297,
                        17311
                      ],
                      "loc": {
                        "start": {
                          "line": 432,
                          "column": 12
                        },
                        "end": {
                          "line": 432,
                          "column": 26
                        }
                      }
                    },
                    "consequent": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "Literal",
                            "value": true,
                            "raw": "true",
                            "range": [
                              17334,
                              17338
                            ],
                            "loc": {
                              "start": {
                                "line": 433,
                                "column": 19
                              },
                              "end": {
                                "line": 433,
                                "column": 23
                              }
                            }
                          },
                          "range": [
                            17327,
                            17339
                          ],
                          "loc": {
                            "start": {
                              "line": 433,
                              "column": 12
                            },
                            "end": {
                              "line": 433,
                              "column": 24
                            }
                          }
                        }
                      ],
                      "range": [
                        17313,
                        17349
                      ],
                      "loc": {
                        "start": {
                          "line": 432,
                          "column": 28
                        },
                        "end": {
                          "line": 434,
                          "column": 9
                        }
                      }
                    },
                    "alternate": null,
                    "range": [
                      17293,
                      17349
                    ],
                    "loc": {
                      "start": {
                        "line": 432,
                        "column": 8
                      },
                      "end": {
                        "line": 434,
                        "column": 9
                      }
                    }
                  },
                  {
                    "type": "IfStatement",
                    "test": {
                      "type": "BinaryExpression",
                      "operator": "instanceof",
                      "left": {
                        "type": "Identifier",
                        "name": "other",
                        "range": [
                          17362,
                          17367
                        ],
                        "loc": {
                          "start": {
                            "line": 435,
                            "column": 12
                          },
                          "end": {
                            "line": 435,
                            "column": 17
                          }
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "Fixed",
                        "range": [
                          17379,
                          17384
                        ],
                        "loc": {
                          "start": {
                            "line": 435,
                            "column": 29
                          },
                          "end": {
                            "line": 435,
                            "column": 34
                          }
                        }
                      },
                      "range": [
                        17362,
                        17384
                      ],
                      "loc": {
                        "start": {
                          "line": 435,
                          "column": 12
                        },
                        "end": {
                          "line": 435,
                          "column": 34
                        }
                      }
                    },
                    "consequent": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "ThisExpression",
                                  "range": [
                                    17407,
                                    17411
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 436,
                                      "column": 19
                                    },
                                    "end": {
                                      "line": 436,
                                      "column": 23
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_offset",
                                  "range": [
                                    17412,
                                    17419
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 436,
                                      "column": 24
                                    },
                                    "end": {
                                      "line": 436,
                                      "column": 31
                                    }
                                  }
                                },
                                "range": [
                                  17407,
                                  17419
                                ],
                                "loc": {
                                  "start": {
                                    "line": 436,
                                    "column": 19
                                  },
                                  "end": {
                                    "line": 436,
                                    "column": 31
                                  }
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "equals",
                                "range": [
                                  17420,
                                  17426
                                ],
                                "loc": {
                                  "start": {
                                    "line": 436,
                                    "column": 32
                                  },
                                  "end": {
                                    "line": 436,
                                    "column": 38
                                  }
                                }
                              },
                              "range": [
                                17407,
                                17426
                              ],
                              "loc": {
                                "start": {
                                  "line": 436,
                                  "column": 19
                                },
                                "end": {
                                  "line": 436,
                                  "column": 38
                                }
                              }
                            },
                            "arguments": [
                              {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "other",
                                  "range": [
                                    17427,
                                    17432
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 436,
                                      "column": 39
                                    },
                                    "end": {
                                      "line": 436,
                                      "column": 44
                                    }
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_offset",
                                  "range": [
                                    17433,
                                    17440
                                  ],
                                  "loc": {
                                    "start": {
                                      "line": 436,
                                      "column": 45
                                    },
                                    "end": {
                                      "line": 436,
                                      "column": 52
                                    }
                                  }
                                },
                                "range": [
                                  17427,
                                  17440
                                ],
                                "loc": {
                                  "start": {
                                    "line": 436,
                                    "column": 39
                                  },
                                  "end": {
                                    "line": 436,
                                    "column": 52
                                  }
                                }
                              }
                            ],
                            "range": [
                              17407,
                              17441
                            ],
                            "loc": {
                              "start": {
                                "line": 436,
                                "column": 19
                              },
                              "end": {
                                "line": 436,
                                "column": 53
                              }
                            }
                          },
                          "range": [
                            17400,
                            17442
                          ],
                          "loc": {
                            "start": {
                              "line": 436,
                              "column": 12
                            },
                            "end": {
                              "line": 436,
                              "column": 54
                            }
                          }
                        }
                      ],
                      "range": [
                        17386,
                        17452
                      ],
                      "loc": {
                        "start": {
                          "line": 435,
                          "column": 36
                        },
                        "end": {
                          "line": 437,
                          "column": 9
                        }
                      }
                    },
                    "alternate": null,
                    "range": [
                      17358,
                      17452
                    ],
                    "loc": {
                      "start": {
                        "line": 435,
                        "column": 8
                      },
                      "end": {
                        "line": 437,
                        "column": 9
                      }
                    }
                  },
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Literal",
                      "value": false,
                      "raw": "false",
                      "range": [
                        17468,
                        17473
                      ],
                      "loc": {
                        "start": {
                          "line": 438,
                          "column": 15
                        },
                        "end": {
                          "line": 438,
                          "column": 20
                        }
                      }
                    },
                    "range": [
                      17461,
                      17474
                    ],
                    "loc": {
                      "start": {
                        "line": 438,
                        "column": 8
                      },
                      "end": {
                        "line": 438,
                        "column": 21
                      }
                    }
                  }
                ],
                "range": [
                  17283,
                  17480
                ],
                "loc": {
                  "start": {
                    "line": 431,
                    "column": 18
                  },
                  "end": {
                    "line": 439,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                17275,
                17480
              ],
              "loc": {
                "start": {
                  "line": 431,
                  "column": 10
                },
                "end": {
                  "line": 439,
                  "column": 5
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              17269,
              17480
            ],
            "loc": {
              "start": {
                "line": 431,
                "column": 4
              },
              "end": {
                "line": 439,
                "column": 5
              }
            },
            "leadingComments": [
              {
                "type": "Line",
                "value": "-----------------------------------------------------------------------",
                "range": [
                  17122,
                  17195
                ],
                "loc": {
                  "start": {
                    "line": 425,
                    "column": 4
                  },
                  "end": {
                    "line": 425,
                    "column": 77
                  }
                }
              },
              {
                "type": "Block",
                "value": "*\n     *\n     * @param other\n     * @returns {boolean}\n     ",
                "range": [
                  17200,
                  17264
                ],
                "loc": {
                  "start": {
                    "line": 426,
                    "column": 4
                  },
                  "end": {
                    "line": 430,
                    "column": 7
                  }
                }
              }
            ],
            "trailingComments": [
              {
                "type": "Block",
                "value": "*\n     *\n     * @returns {string}\n     ",
                "range": [
                  17486,
                  17529
                ],
                "loc": {
                  "start": {
                    "line": 441,
                    "column": 4
                  },
                  "end": {
                    "line": 444,
                    "column": 7
                  }
                }
              }
            ],
            "static": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "toString",
              "range": [
                17534,
                17542
              ],
              "loc": {
                "start": {
                  "line": 445,
                  "column": 4
                },
                "end": {
                  "line": 445,
                  "column": 12
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "BinaryExpression",
                      "operator": "+",
                      "left": {
                        "type": "Literal",
                        "value": "FixedRules:",
                        "raw": "'FixedRules:'",
                        "range": [
                          17562,
                          17575
                        ],
                        "loc": {
                          "start": {
                            "line": 446,
                            "column": 15
                          },
                          "end": {
                            "line": 446,
                            "column": 28
                          }
                        }
                      },
                      "right": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression",
                              "range": [
                                17578,
                                17582
                              ],
                              "loc": {
                                "start": {
                                  "line": 446,
                                  "column": 31
                                },
                                "end": {
                                  "line": 446,
                                  "column": 35
                                }
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_offset",
                              "range": [
                                17583,
                                17590
                              ],
                              "loc": {
                                "start": {
                                  "line": 446,
                                  "column": 36
                                },
                                "end": {
                                  "line": 446,
                                  "column": 43
                                }
                              }
                            },
                            "range": [
                              17578,
                              17590
                            ],
                            "loc": {
                              "start": {
                                "line": 446,
                                "column": 31
                              },
                              "end": {
                                "line": 446,
                                "column": 43
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toString",
                            "range": [
                              17591,
                              17599
                            ],
                            "loc": {
                              "start": {
                                "line": 446,
                                "column": 44
                              },
                              "end": {
                                "line": 446,
                                "column": 52
                              }
                            }
                          },
                          "range": [
                            17578,
                            17599
                          ],
                          "loc": {
                            "start": {
                              "line": 446,
                              "column": 31
                            },
                            "end": {
                              "line": 446,
                              "column": 52
                            }
                          }
                        },
                        "arguments": [],
                        "range": [
                          17578,
                          17601
                        ],
                        "loc": {
                          "start": {
                            "line": 446,
                            "column": 31
                          },
                          "end": {
                            "line": 446,
                            "column": 54
                          }
                        }
                      },
                      "range": [
                        17562,
                        17601
                      ],
                      "loc": {
                        "start": {
                          "line": 446,
                          "column": 15
                        },
                        "end": {
                          "line": 446,
                          "column": 54
                        }
                      }
                    },
                    "range": [
                      17555,
                      17602
                    ],
                    "loc": {
                      "start": {
                        "line": 446,
                        "column": 8
                      },
                      "end": {
                        "line": 446,
                        "column": 55
                      }
                    }
                  }
                ],
                "range": [
                  17545,
                  17608
                ],
                "loc": {
                  "start": {
                    "line": 445,
                    "column": 15
                  },
                  "end": {
                    "line": 447,
                    "column": 5
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                17542,
                17608
              ],
              "loc": {
                "start": {
                  "line": 445,
                  "column": 12
                },
                "end": {
                  "line": 447,
                  "column": 5
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              17534,
              17608
            ],
            "loc": {
              "start": {
                "line": 445,
                "column": 4
              },
              "end": {
                "line": 447,
                "column": 5
              }
            },
            "leadingComments": [
              {
                "type": "Block",
                "value": "*\n     *\n     * @returns {string}\n     ",
                "range": [
                  17486,
                  17529
                ],
                "loc": {
                  "start": {
                    "line": 441,
                    "column": 4
                  },
                  "end": {
                    "line": 444,
                    "column": 7
                  }
                }
              }
            ],
            "static": false
          }
        ],
        "range": [
          16055,
          17611
        ],
        "loc": {
          "start": {
            "line": 353,
            "column": 29
          },
          "end": {
            "line": 449,
            "column": 1
          }
        }
      },
      "range": [
        16026,
        17611
      ],
      "loc": {
        "start": {
          "line": 353,
          "column": 0
        },
        "end": {
          "line": 449,
          "column": 1
        }
      }
    }
  ],
  "sourceType": "module",
  "range": [
    229,
    17611
  ],
  "loc": {
    "start": {
      "line": 7,
      "column": 0
    },
    "end": {
      "line": 449,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n ",
      "range": [
        0,
        227
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 5,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Obtains an instance of {@link ZoneRules} that always uses the same offset.\n     *\n     * The returned rules always have the same offset.\n     *\n     * @param {ZoneOffset} offset - the offset, not null\n     * @return {ZoneRules} the zone rules, not null\n     ",
      "range": [
        397,
        668
      ],
      "loc": {
        "start": {
          "line": 14,
          "column": 4
        },
        "end": {
          "line": 21,
          "column": 7
        }
      }
    },
    {
      "type": "Line",
      "value": "-----------------------------------------------------------------------",
      "range": [
        781,
        854
      ],
      "loc": {
        "start": {
          "line": 28,
          "column": 4
        },
        "end": {
          "line": 28,
          "column": 77
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Checks of the zone rules are fixed, such that the offset never varies.\n     *\n     * @return {boolean} true if the time-zone is fixed and the offset never changes\n     ",
      "range": [
        859,
        1040
      ],
      "loc": {
        "start": {
          "line": 29,
          "column": 4
        },
        "end": {
          "line": 33,
          "column": 7
        }
      }
    },
    {
      "type": "Line",
      "value": "-----------------------------------------------------------------------",
      "range": [
        1128,
        1201
      ],
      "loc": {
        "start": {
          "line": 38,
          "column": 4
        },
        "end": {
          "line": 38,
          "column": 77
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     *\n     * @param instantOrLocalDateTime\n     * @returns {ZoneOffset}\n     ",
      "range": [
        1207,
        1291
      ],
      "loc": {
        "start": {
          "line": 40,
          "column": 4
        },
        "end": {
          "line": 44,
          "column": 7
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Gets the offset applicable at the specified instant in these rules.\n     *\n     * The mapping from an instant to an offset is simple, there is only\n     * one valid offset for each instant.\n     * This method returns that offset.\n     *\n     * @param {Instant} instant - the instant to find the offset for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset} the offset, not null\n     ",
      "range": [
        1557,
        2024
      ],
      "loc": {
        "start": {
          "line": 53,
          "column": 4
        },
        "end": {
          "line": 63,
          "column": 7
        }
      }
    },
    {
      "type": "Line",
      "value": " eslint-disable-next-line no-unused-vars",
      "range": [
        2029,
        2071
      ],
      "loc": {
        "start": {
          "line": 64,
          "column": 4
        },
        "end": {
          "line": 64,
          "column": 46
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Gets the offset applicable at the specified epochMilli in these rules.\n     *\n     * The method is for javascript performance optimisation.\n     *\n     * @param {number} epochMilli - the epoch millisecond to find the offset for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset} the offset, not null\n     ",
      "range": [
        2168,
        2557
      ],
      "loc": {
        "start": {
          "line": 69,
          "column": 4
        },
        "end": {
          "line": 77,
          "column": 7
        }
      }
    },
    {
      "type": "Line",
      "value": " eslint-disable-next-line no-unused-vars",
      "range": [
        2562,
        2604
      ],
      "loc": {
        "start": {
          "line": 78,
          "column": 4
        },
        "end": {
          "line": 78,
          "column": 46
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Gets a suitable offset for the specified local date-time in these rules.\n     *\n     * The mapping from a local date-time to an offset is not straightforward.\n     * There are three cases:\n     *\n     * * Normal, with one valid offset. For the vast majority of the year, the normal\n     *   case applies, where there is a single valid offset for the local date-time.\n     * * Gap, with zero valid offsets. This is when clocks jump forward typically\n     *   due to the spring daylight savings change from \"winter\" to \"summer\".\n     *   In a gap there are local date-time values with no valid offset.\n     * * Overlap, with two valid offsets. This is when clocks are set back typically\n     *   due to the autumn daylight savings change from \"summer\" to \"winter\".\n     *   In an overlap there are local date-time values with two valid offsets.\n     *\n     * Thus, for any given local date-time there can be zero, one or two valid offsets.\n     * This method returns the single offset in the Normal case, and in the Gap or Overlap\n     * case it returns the offset before the transition.\n     *\n     * Since, in the case of Gap and Overlap, the offset returned is a \"best\" value, rather\n     * than the \"correct\" value, it should be treated with care. Applications that care\n     * about the correct offset should use a combination of this method,\n     * {@link getValidOffsets} and {@link getTransition}.\n     *\n     * @param {LocalDateTime} localDateTime - the local date-time to query, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset} the best available offset for the local date-time, not null\n     ",
      "range": [
        2713,
        4399
      ],
      "loc": {
        "start": {
          "line": 84,
          "column": 4
        },
        "end": {
          "line": 111,
          "column": 7
        }
      }
    },
    {
      "type": "Line",
      "value": " eslint-disable-next-line no-unused-vars",
      "range": [
        4404,
        4446
      ],
      "loc": {
        "start": {
          "line": 112,
          "column": 4
        },
        "end": {
          "line": 112,
          "column": 46
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Gets the offset applicable at the specified local date-time in these rules.\n     *\n     * The mapping from a local date-time to an offset is not straightforward.\n     * There are three cases:\n     *\n     * * Normal, with one valid offset. For the vast majority of the year, the normal\n     *   case applies, where there is a single valid offset for the local date-time.\n     * * Gap, with zero valid offsets. This is when clocks jump forward typically\n     *   due to the spring daylight savings change from \"winter\" to \"summer\".\n     *   In a gap there are local date-time values with no valid offset.\n     * * Overlap, with two valid offsets. This is when clocks are set back typically\n     *   due to the autumn daylight savings change from \"summer\" to \"winter\".\n     *   In an overlap there are local date-time values with two valid offsets.\n     *\n     * Thus, for any given local date-time there can be zero, one or two valid offsets.\n     * This method returns that list of valid offsets, which is a list of size 0, 1 or 2.\n     * In the case where there are two offsets, the earlier offset is returned at index 0\n     * and the later offset at index 1.\n     *\n     * There are various ways to handle the conversion from a {@link LocalDateTime}.\n     * One technique, using this method, would be:\n     * <pre>\n     *  List<ZoneOffset> validOffsets = rules.getOffset(localDT);\n     *  if (validOffsets.size() == 1) {\n     *    // Normal case: only one valid offset\n     *    zoneOffset = validOffsets.get(0);\n     *  } else {\n     *    // Gap or Overlap: determine what to do from transition (which will be non-null)\n     *    ZoneOffsetTransition trans = rules.getTransition(localDT);\n     *  }\n     * </pre>\n     *\n     * In theory, it is possible for there to be more than two valid offsets.\n     * This would happen if clocks to be put back more than once in quick succession.\n     * This has never happened in the history of time-zones and thus has no special handling.\n     * However, if it were to happen, then the list would return more than 2 entries.\n     *\n     * @param {LocalDateTime} localDateTime - the local date-time to query for valid offsets, not null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset[]} the list of valid offsets, may be immutable, not null\n     ",
      "range": [
        4561,
        6914
      ],
      "loc": {
        "start": {
          "line": 117,
          "column": 4
        },
        "end": {
          "line": 158,
          "column": 7
        }
      }
    },
    {
      "type": "Line",
      "value": " eslint-disable-next-line no-unused-vars",
      "range": [
        6919,
        6961
      ],
      "loc": {
        "start": {
          "line": 159,
          "column": 4
        },
        "end": {
          "line": 159,
          "column": 46
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Gets the offset transition applicable at the specified local date-time in these rules.\n     *\n     * The mapping from a local date-time to an offset is not straightforward.\n     * There are three cases:\n     *\n     * * Normal, with one valid offset. For the vast majority of the year, the normal\n     *   case applies, where there is a single valid offset for the local date-time.\n     * * Gap, with zero valid offsets. This is when clocks jump forward typically\n     *   due to the spring daylight savings change from \"winter\" to \"summer\".\n     *   In a gap there are local date-time values with no valid offset.\n     * * Overlap, with two valid offsets. This is when clocks are set back typically\n     *   due to the autumn daylight savings change from \"summer\" to \"winter\".\n     *   In an overlap there are local date-time values with two valid offsets.\n     *\n     * A transition is used to model the cases of a Gap or Overlap.\n     * The Normal case will return null.\n     *\n     * There are various ways to handle the conversion from a {@link LocalDateTime}.\n     * One technique, using this method, would be:\n     * <pre>\n     *  ZoneOffsetTransition trans = rules.getTransition(localDT);\n     *  if (trans != null) {\n     *    // Gap or Overlap: determine what to do from transition\n     *  } else {\n     *    // Normal case: only one valid offset\n     *    zoneOffset = rule.getOffset(localDT);\n     *  }\n     * </pre>\n     *\n     * @param {LocalDateTime} localDateTime  the local date-time to query for offset transition, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffsetTransition} the offset transition, null if the local date-time is not in transition\n     ",
      "range": [
        7060,
        8813
      ],
      "loc": {
        "start": {
          "line": 164,
          "column": 4
        },
        "end": {
          "line": 197,
          "column": 7
        }
      }
    },
    {
      "type": "Line",
      "value": " eslint-disable-next-line no-unused-vars",
      "range": [
        8818,
        8860
      ],
      "loc": {
        "start": {
          "line": 198,
          "column": 4
        },
        "end": {
          "line": 198,
          "column": 46
        }
      }
    },
    {
      "type": "Line",
      "value": "-----------------------------------------------------------------------",
      "range": [
        8955,
        9028
      ],
      "loc": {
        "start": {
          "line": 203,
          "column": 4
        },
        "end": {
          "line": 203,
          "column": 77
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Gets the standard offset for the specified instant in this zone.\n     *\n     * This provides access to historic information on how the standard offset\n     * has changed over time.\n     * The standard offset is the offset before any daylight saving time is applied.\n     * This is typically the offset applicable during winter.\n     *\n     * @param {Instant} instant - the instant to find the offset information for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset} the standard offset, not null\n     ",
      "range": [
        9033,
        9619
      ],
      "loc": {
        "start": {
          "line": 204,
          "column": 4
        },
        "end": {
          "line": 215,
          "column": 7
        }
      }
    },
    {
      "type": "Line",
      "value": " eslint-disable-next-line no-unused-vars",
      "range": [
        9624,
        9666
      ],
      "loc": {
        "start": {
          "line": 216,
          "column": 4
        },
        "end": {
          "line": 216,
          "column": 46
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Gets the amount of daylight savings in use for the specified instant in this zone.\n     *\n     * This provides access to historic information on how the amount of daylight\n     * savings has changed over time.\n     * This is the difference between the standard offset and the actual offset.\n     * Typically the amount is zero during winter and one hour during summer.\n     * Time-zones are second-based, so the nanosecond part of the duration will be zero.\n     *\n     * @param {Instant} instant - the instant to find the daylight savings for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {Duration} the difference between the standard and actual offset, not null\n     ",
      "range": [
        9763,
        10509
      ],
      "loc": {
        "start": {
          "line": 221,
          "column": 4
        },
        "end": {
          "line": 233,
          "column": 7
        }
      }
    },
    {
      "type": "Line",
      "value": " eslint-disable-next-line no-unused-vars",
      "range": [
        10514,
        10556
      ],
      "loc": {
        "start": {
          "line": 234,
          "column": 4
        },
        "end": {
          "line": 234,
          "column": 46
        }
      }
    },
    {
      "type": "Line",
      "value": "    default {",
      "range": [
        10652,
        10667
      ],
      "loc": {
        "start": {
          "line": 237,
          "column": 8
        },
        "end": {
          "line": 237,
          "column": 23
        }
      }
    },
    {
      "type": "Line",
      "value": "        ZoneOffset standardOffset = getStandardOffset(instant);",
      "range": [
        10676,
        10741
      ],
      "loc": {
        "start": {
          "line": 238,
          "column": 8
        },
        "end": {
          "line": 238,
          "column": 73
        }
      }
    },
    {
      "type": "Line",
      "value": "        ZoneOffset actualOffset = getOffset(instant);",
      "range": [
        10750,
        10805
      ],
      "loc": {
        "start": {
          "line": 239,
          "column": 8
        },
        "end": {
          "line": 239,
          "column": 63
        }
      }
    },
    {
      "type": "Line",
      "value": "        return actualOffset.toDuration().minus(standardOffset.toDuration()).normalized();",
      "range": [
        10814,
        10905
      ],
      "loc": {
        "start": {
          "line": 240,
          "column": 8
        },
        "end": {
          "line": 240,
          "column": 99
        }
      }
    },
    {
      "type": "Line",
      "value": "    }",
      "range": [
        10914,
        10921
      ],
      "loc": {
        "start": {
          "line": 241,
          "column": 8
        },
        "end": {
          "line": 241,
          "column": 15
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Checks if the specified instant is in daylight savings.\n     *\n     * This checks if the standard and actual offsets are the same at the specified instant.\n     *\n     * @param {Instant} instant - the instant to find the offset information for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {boolean} the standard offset, not null\n     ",
      "range": [
        10933,
        11344
      ],
      "loc": {
        "start": {
          "line": 244,
          "column": 4
        },
        "end": {
          "line": 252,
          "column": 7
        }
      }
    },
    {
      "type": "Line",
      "value": " eslint-disable-next-line no-unused-vars",
      "range": [
        11349,
        11391
      ],
      "loc": {
        "start": {
          "line": 253,
          "column": 4
        },
        "end": {
          "line": 253,
          "column": 46
        }
      }
    },
    {
      "type": "Line",
      "value": "    default {",
      "range": [
        11492,
        11507
      ],
      "loc": {
        "start": {
          "line": 256,
          "column": 8
        },
        "end": {
          "line": 256,
          "column": 23
        }
      }
    },
    {
      "type": "Line",
      "value": "        return (getStandardOffset(instant).equals(getOffset(instant)) == false);",
      "range": [
        11516,
        11598
      ],
      "loc": {
        "start": {
          "line": 257,
          "column": 8
        },
        "end": {
          "line": 257,
          "column": 90
        }
      }
    },
    {
      "type": "Line",
      "value": "    }",
      "range": [
        11607,
        11614
      ],
      "loc": {
        "start": {
          "line": 258,
          "column": 8
        },
        "end": {
          "line": 258,
          "column": 15
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Checks if the offset date-time is valid for these rules.\n     *\n     * To be valid, the local date-time must not be in a gap and the offset\n     * must match the valid offsets.\n     *\n     * @param {LocalDateTime} localDateTime - the date-time to check, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @param {ZoneOffset} offset - the offset to check, null returns false\n     * @return {boolean} true if the offset date-time is valid for these rules\n     ",
      "range": [
        11626,
        12146
      ],
      "loc": {
        "start": {
          "line": 261,
          "column": 4
        },
        "end": {
          "line": 271,
          "column": 7
        }
      }
    },
    {
      "type": "Line",
      "value": " eslint-disable-next-line no-unused-vars",
      "range": [
        12151,
        12193
      ],
      "loc": {
        "start": {
          "line": 272,
          "column": 4
        },
        "end": {
          "line": 272,
          "column": 46
        }
      }
    },
    {
      "type": "Line",
      "value": "-----------------------------------------------------------------------",
      "range": [
        12302,
        12375
      ],
      "loc": {
        "start": {
          "line": 277,
          "column": 4
        },
        "end": {
          "line": 277,
          "column": 77
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Gets the next transition after the specified instant.\n     *\n     * This returns details of the next transition after the specified instant.\n     * For example, if the instant represents a point where \"Summer\" daylight savings time\n     * applies, then the method will return the transition to the next \"Winter\" time.\n     *\n     * @param {Instant} instant - the instant to get the next transition after, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffsetTransition} the next transition after the specified instant, null if this is after the last transition\n     ",
      "range": [
        12380,
        13025
      ],
      "loc": {
        "start": {
          "line": 278,
          "column": 4
        },
        "end": {
          "line": 288,
          "column": 7
        }
      }
    },
    {
      "type": "Line",
      "value": " eslint-disable-next-line no-unused-vars",
      "range": [
        13030,
        13072
      ],
      "loc": {
        "start": {
          "line": 289,
          "column": 4
        },
        "end": {
          "line": 289,
          "column": 46
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Gets the previous transition before the specified instant.\n     *\n     * This returns details of the previous transition after the specified instant.\n     * For example, if the instant represents a point where \"summer\" daylight saving time\n     * applies, then the method will return the transition from the previous \"winter\" time.\n     *\n     * @param {Instant} instant - the instant to get the previous transition after, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffsetTransition} the previous transition after the specified instant, null if this is before the first transition\n     ",
      "range": [
        13169,
        13838
      ],
      "loc": {
        "start": {
          "line": 294,
          "column": 4
        },
        "end": {
          "line": 304,
          "column": 7
        }
      }
    },
    {
      "type": "Line",
      "value": " eslint-disable-next-line no-unused-vars",
      "range": [
        13843,
        13885
      ],
      "loc": {
        "start": {
          "line": 305,
          "column": 4
        },
        "end": {
          "line": 305,
          "column": 46
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Gets the complete list of fully defined transitions.\n     *\n     * The complete set of transitions for this rules instance is defined by this method\n     * and {@link getTransitionRules}. This method returns those transitions that have\n     * been fully defined. These are typically historical, but may be in the future.\n     *\n     * The list will be empty for fixed offset rules and for any time-zone where there has\n     * only ever been a single offset. The list will also be empty if the transition rules are unknown.\n     *\n     * @return {ZoneOffsetTransition[]} an immutable list of fully defined transitions, not null\n     ",
      "range": [
        13990,
        14635
      ],
      "loc": {
        "start": {
          "line": 310,
          "column": 4
        },
        "end": {
          "line": 321,
          "column": 7
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Gets the list of transition rules for years beyond those defined in the transition list.\n     *\n     * The complete set of transitions for this rules instance is defined by this method\n     * and {@link getTransitions}. This method returns instances of {@link ZoneOffsetTransitionRule}\n     * that define an algorithm for when transitions will occur.\n     *\n     * For any given {@link ZoneRules}, this list contains the transition rules for years\n     * beyond those years that have been fully defined. These rules typically refer to future\n     * daylight saving time rule changes.\n     *\n     * If the zone defines daylight savings into the future, then the list will normally\n     * be of size two and hold information about entering and exiting daylight savings.\n     * If the zone does not have daylight savings, or information about future changes\n     * is uncertain, then the list will be empty.\n     *\n     * The list will be empty for fixed offset rules and for any time-zone where there is no\n     * daylight saving time. The list will also be empty if the transition rules are unknown.\n     *\n     * @return {ZoneOffsetTransitionRule[]} an immutable list of transition rules, not null\n     ",
      "range": [
        14719,
        15935
      ],
      "loc": {
        "start": {
          "line": 326,
          "column": 4
        },
        "end": {
          "line": 346,
          "column": 7
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     *\n     * @param {ZoneOffset} offset\n     ",
      "range": [
        16061,
        16113
      ],
      "loc": {
        "start": {
          "line": 354,
          "column": 4
        },
        "end": {
          "line": 357,
          "column": 7
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     *\n     * @param {LocalDateTime} LocalDateTime\n     * @param {ZoneOffset} offset\n     * @return {boolean}\n     ",
      "range": [
        16709,
        16830
      ],
      "loc": {
        "start": {
          "line": 399,
          "column": 4
        },
        "end": {
          "line": 404,
          "column": 7
        }
      }
    },
    {
      "type": "Line",
      "value": "-----------------------------------------------------------------------",
      "range": [
        17122,
        17195
      ],
      "loc": {
        "start": {
          "line": 425,
          "column": 4
        },
        "end": {
          "line": 425,
          "column": 77
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     *\n     * @param other\n     * @returns {boolean}\n     ",
      "range": [
        17200,
        17264
      ],
      "loc": {
        "start": {
          "line": 426,
          "column": 4
        },
        "end": {
          "line": 430,
          "column": 7
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     *\n     * @returns {string}\n     ",
      "range": [
        17486,
        17529
      ],
      "loc": {
        "start": {
          "line": 441,
          "column": 4
        },
        "end": {
          "line": 444,
          "column": 7
        }
      }
    }
  ]
}