{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 71ced77245e524fc110e","webpack:///./src/js-joda.js","webpack:///./src/LocalDate.js","webpack:///./src/assert.js","webpack:///./src/MathUtil.js","webpack:///./src/errors.js","webpack:///./~/es6-error/dist/index.js","webpack:///./src/chrono/IsoChronology.js","webpack:///./src/temporal/ChronoField.js","webpack:///./src/temporal/ValueRange.js","webpack:///./src/Clock.js","webpack:///./src/Instant.js","webpack:///./src/ZoneOffset.js","webpack:///./src/LocalTime.js","webpack:///./src/Month.js"],"names":[],"mappings":"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","file":"js-joda.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jsjoda\"] = factory();\n\telse\n\t\troot[\"jsjoda\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 71ced77245e524fc110e\n **/","import { LocalDate } from './LocalDate'\n\nexport default {\n    LocalDate: LocalDate\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/js-joda.js\n **/","import {assert} from './assert';\n\nimport { MathUtil } from './MathUtil';\nimport {DateTimeException} from './errors';\n\nimport { IsoChronology } from './chrono/IsoChronology';\nimport {DAY_OF_MONTH, MONTH_OF_YEAR, YEAR } from './temporal/ChronoField';\n\nimport {Clock} from './Clock';\nimport {Month} from './Month';\nimport {LocalTime} from './LocalTime';\n\n/**\n * The number of days in a 400 year cycle.\n */\nconst  DAYS_PER_CYCLE = 146097;\n\n\n  /**\n   * The number of days from year zero to year 1970.\n   * There are five 400 year cycles from year zero to 2000.\n   * There are 7 leap years from 1970 to 2000.\n   */\nconst  DAYS_0000_TO_1970 = (DAYS_PER_CYCLE * 5) - (30 * 365 + 7);\n\n/**\n * A date without a time-zone in the ISO-8601 calendar system,\n * such as 2007-12-03.\n *\n * LocalDate is an immutable date-time object that represents a date,\n * often viewed as year-month-day. Other date fields, such as day-of-year,\n * day-of-week and week-of-year, can also be accessed.\n * For example, the value \"2nd October 2007\" can be stored in a LocalDate.\n *\n * This class does not store or represent a time or time-zone.\n * Instead, it is a description of the date, as used for birthdays.\n * It cannot represent an instant on the time-line without additional information\n * such as an offset or time-zone.\n */\n\nexport class LocalDate {\n\n    /**\n     *\n     * @param {number} year\n     * @param {Month, number} month\n     * @param {number} dayOfMonth\n     */\n    constructor(year, month, dayOfMonth){\n        if (month instanceof Month) {\n            month = month.value();\n        }\n        LocalDate.validate(year, month, dayOfMonth);\n        this._year = year;\n        this._month = month;\n        this._day = dayOfMonth;\n    }\n\n    /**\n     * Obtains an instance of {@code LocalDate} from a year, month and day.\n     * <p>\n     * This returns a {@code LocalDate} with the specified year, month and day-of-month.\n     * The day must be valid for the year and month, otherwise an exception will be thrown.\n     *\n     * @param {number} year  the year to represent, from MIN_YEAR to MAX_YEAR\n     * @param {Month, number} month  the month-of-year to represent, from 1 (January) to 12 (December)\n     * @param {number} dayOfMonth  the day-of-month to represent, from 1 to 31\n     * @return LocalDate the local date, not null\n     * @throws DateTimeException if the value of any field is out of range,\n     *  or if the day-of-month is invalid for the month-year\n     */\n    static of(year, month, dayOfMonth) {\n        return new LocalDate(year, month, dayOfMonth);\n    }\n\n    /**\n     *\n     * @return {number} gets the year\n     */\n    year() {\n        return this._year\n    }\n\n    /**\n     *\n     * @return {number} gets the month\n     */\n    monthValue() {\n        return this._month\n    }\n    \n    month() {\n        return Month.of(this._month);\n    }\n\n    /**\n     *\n     * @return {number} gets the day of month\n     */\n    // TODO: should be dayOfMonth() ?\n    day() {\n        return this._day\n    }\n\n    /**\n     * Returns a copy of this LocalDate with the specified number of days added.\n     * \n     * This method adds the specified amount to the days field incrementing the\n     * month and year fields as necessary to ensure the result remains valid.\n     * The result is only invalid if the maximum/minimum year is exceeded.\n     * \n     * For example, 2008-12-31 plus one day would result in 2009-01-01.\n     * \n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} daysToAdd - the days to add, may be negative\n     * @return {LocalDate} a LocalDate based on this date with the days added, not null\n     * @throws AssertionError if the result exceeds the supported date range\n     */\n    plusDays(daysToAdd) {\n        if (daysToAdd === 0) {\n            return this;\n        }\n        var mjDay = this.toEpochDay() + daysToAdd;\n        return LocalDate.ofEpochDay(mjDay);\n    };\n\n    /*\n     * Returns a copy of this LocalDate with the specified number of days subtracted.\n     * \n     * This method subtracts the specified amount from the days field decrementing the\n     * month and year fields as necessary to ensure the result remains valid.\n     * The result is only invalid if the maximum/minimum year is exceeded.\n     * \n     * For example, 2009-01-01 minus one day would result in 2008-12-31.\n     * \n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} daysToSubtract - the days to subtract, may be negative\n     * @return {LocalDate} a LocalDate based on this date with the days subtracted, not null\n     * @throws AssertionError if the result exceeds the supported date range\n     */\n    minusDays(daysToSubtract) {\n        return this.plusDays(daysToSubtract * -1)\n    };\n\n    /**\n     * Converts this date to the Epoch Day.\n     *\n     * The Epoch Day count is a simple incrementing count of days where day 0 is 1970-01-01 (ISO).\n     * This definition is the same for all chronologies, enabling conversion.\n     *\n     * @return {number} the Epoch Day equivalent to this date\n     */\n    toEpochDay() {\n        var y = this.year();\n        var m = this.monthValue();\n        var total = 0;\n        total += 365 * y;\n        if (y >= 0) {\n            total += MathUtil.div(y + 3, 4) - MathUtil.div(y + 99, 100) + MathUtil.div(y + 399, 400);\n        } else {\n            total -= MathUtil.div(y, -4) - MathUtil.div(y, -100) + MathUtil.div(y, -400);\n        }\n        total += MathUtil.div(367 * m - 362, 12);\n        total += this.day() - 1;\n        if (m > 2) {\n            total--;\n            if (!IsoChronology.isLeapYear(y)) {\n                total--;\n            }\n        }\n        return total - DAYS_0000_TO_1970;\n    }\n\n    static now(clock = Clock.systemDefaultZone()) {\n        var now = clock.instant();\n        var offset = clock.offset(now);\n        var epochSec = now.epochSecond() + offset.totalSeconds();\n        var epochDay = MathUtil.floorDiv(epochSec, LocalTime.SECONDS_PER_DAY);\n        return LocalDate.ofEpochDay(epochDay);\n    }\n\n    /**\n     * Checks if this date is equal to another date.\n     *\n     * Compares this LocalDate with another ensuring that the date is the same.\n     *\n     * Only objects of type LocalDate are compared, other types return false.\n     *\n     * @param otherDate  the object to check, null returns false\n     * @return true if this is equal to the other date\n     */\n    equals(otherDate) {\n        if (this === otherDate) {\n            return true;\n        }\n        if (otherDate instanceof LocalDate) {\n            return this._compareTo(otherDate) === 0;\n        }\n        return false;\n    }\n\n    _compareTo(otherDate){\n        var cmp = this.year() - otherDate.year();\n        if (cmp == 0) {\n            cmp = (this.monthValue() - otherDate.monthValue());\n            if (cmp == 0) {\n                cmp = (this.day() - otherDate.day());\n            }\n        }\n        return cmp;\n    }\n\n    /**\n     * Outputs this date as a String, such as 2007-12-03.\n     * The output will be in the ISO-8601 format uuuu-MM-dd.\n     *\n     * @return {string} a string representation of this date, not null\n     */\n    toString() {\n        var dayString, monthString, yearString;\n\n        var yearValue = this.year();\n        var monthValue = this.monthValue();\n        var dayValue = this.day();\n\n        var absYear = Math.abs(yearValue);\n\n        if (absYear < 1000) {\n          if (yearValue < 0) {\n            yearString = \"-\" + (\"\" + (yearValue - 10000)).slice(-4);\n          } else {\n            yearString = (\"\" + (yearValue + 10000)).slice(-4);\n          }\n        } else {\n          if (yearValue > 9999) {\n            yearString = \"+\" + yearValue;\n          } else {\n            yearString = \"\" + yearValue;\n          }\n        }\n\n        if (monthValue < 10) {\n          monthString = \"-0\" + monthValue;\n        } else {\n          monthString = \"-\" + monthValue;\n        }\n\n        if (dayValue < 10) {\n          dayString = \"-0\" + dayValue;\n        } else {\n          dayString = \"-\" + dayValue;\n        }\n\n        return yearString + monthString + dayString;\n    }\n\n    /**\n     * Obtains an instance of LocalDate from the epoch day count.\n     *\n     * This returns a LocalDate with the specified epoch-day.\n     * The {@link ChronoField#EPOCH_DAY EPOCH_DAY} is a simple incrementing count\n     * of days where day 0 is 1970-01-01. Negative numbers represent earlier days.\n     *\n     * @param {number} epochDay - the Epoch Day to convert, based on the epoch 1970-01-01\n     * @return {LocalDate} the local date, not null\n     * @throws AssertionError if the epoch days exceeds the supported date range\n     */\n\n    static ofEpochDay(epochDay) {\n        var adjust, adjustCycles, dom, doyEst, marchDoy0, marchMonth0, month, year, yearEst, zeroDay;\n        zeroDay = epochDay + DAYS_0000_TO_1970;\n        zeroDay -= 60;\n        adjust = 0;\n        if (zeroDay < 0) {\n            adjustCycles = MathUtil.div(zeroDay + 1, DAYS_PER_CYCLE) - 1;\n            adjust = adjustCycles * 400;\n            zeroDay += -adjustCycles * DAYS_PER_CYCLE;\n        }\n        yearEst = MathUtil.div(400 * zeroDay + 591, DAYS_PER_CYCLE);\n        doyEst = zeroDay - (365 * yearEst + MathUtil.div(yearEst, 4) - MathUtil.div(yearEst, 100) + MathUtil.div(yearEst, 400));\n        if (doyEst < 0) {\n            yearEst--;\n            doyEst = zeroDay - (365 * yearEst + MathUtil.div(yearEst, 4) - MathUtil.div(yearEst, 100) + MathUtil.div(yearEst, 400));\n        }\n        yearEst += adjust;\n        marchDoy0 = doyEst;\n        marchMonth0 = MathUtil.div(marchDoy0 * 5 + 2, 153);\n        month = (marchMonth0 + 2) % 12 + 1;\n        dom = marchDoy0 - MathUtil.div(marchMonth0 * 306 + 5, 10) + 1;\n        yearEst += MathUtil.div(marchMonth0, 10);\n        year = yearEst;\n        return new LocalDate(year, month, dom);\n    };\n\n    /**\n     * @private\n     */\n    static validate(year, month, dayOfMonth) {\n        var dom;\n        YEAR.checkValidValue(year);\n        MONTH_OF_YEAR.checkValidValue(month);\n        DAY_OF_MONTH.checkValidValue(dayOfMonth);\n        if (dayOfMonth > 28) {\n            dom = 31;\n            switch (month) {\n                case 2:\n                    dom = IsoChronology.isLeapYear(year) ? 29 : 28;\n                    break;\n                case 4:\n                case 6:\n                case 9:\n                case 11:\n                    dom = 30;\n            }\n            if (dayOfMonth > dom) {\n                if (dayOfMonth === 29) {\n                    assert(false, \"Invalid date 'February 29' as '\" + year + \"' is not a leap year\", DateTimeException);\n                } else {\n                    assert(false, \"Invalid date '\" + year + \"' '\" + month + \"' '\" + dayOfMonth + \"'\", DateTimeException);\n                }\n            }\n        }\n    };\n\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/LocalDate.js\n **/","export function assert(assertion, msg, error) {\n    if(!assertion){\n        if (error) {\n            throw new error(msg);\n        } else {\n            throw new Error(msg);\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/assert.js\n **/","/**\n * Math helper with static function for integer operations\n */\nexport class MathUtil {\n    static div(a, b) {\n        return ~~(a / b);\n    }\n\n    // TODO test it\n    static floorDiv(x, y){\n        var r = MathUtil.div(x, y);\n        // if the signs are different and modulo not zero, round down\n        if((x ^ y) < 0 && (r*y !== x)){\n            r--;\n        }\n        return r;\n    }\n\n    // TODO test it\n    static floorMod(x, y){\n        var r = x - MathUtil.floorDiv(x, y) * y;\n        return r;\n    }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/MathUtil.js\n **/","import ExtendableError from 'es6-error'\n\nexport class DateTimeException extends ExtendableError {\n    constructor(message = 'DateTimeException') {\n        super(message)\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/errors.js\n **/","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ExtendableError = (function (_Error) {\n  _inherits(ExtendableError, _Error);\n\n  function ExtendableError() {\n    var message = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\n    _classCallCheck(this, ExtendableError);\n\n    _get(Object.getPrototypeOf(ExtendableError.prototype), 'constructor', this).call(this, message);\n\n    // extending Error is weird and does not propagate `message`\n    Object.defineProperty(this, 'message', {\n      enumerable: false,\n      value: message\n    });\n\n    Object.defineProperty(this, 'name', {\n      enumerable: false,\n      value: this.constructor.name\n    });\n\n    if (Error.hasOwnProperty('captureStackTrace')) {\n      Error.captureStackTrace(this, this.constructor);\n      return;\n    }\n\n    Object.defineProperty(this, 'stack', {\n      enumerable: false,\n      value: new Error(message).stack\n    });\n  }\n\n  return ExtendableError;\n})(Error);\n\nexports['default'] = ExtendableError;\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/es6-error/dist/index.js\n ** module id = 5\n ** module chunks = 0\n **/","export class IsoChronology {\n    /**\n     * Checks if the year is a leap year, according to the ISO proleptic\n     * calendar system rules.\n     *\n     * This method applies the current rules for leap years across the whole time-line.\n     * In general, a year is a leap year if it is divisible by four without\n     * remainder. However, years divisible by 100, are not leap years, with\n     * the exception of years divisible by 400 which are.\n     *\n     * For example, 1904 is a leap year it is divisible by 4.\n     * 1900 was not a leap year as it is divisible by 100, however 2000 was a\n     * leap year as it is divisible by 400.\n     *\n     * The calculation is proleptic - applying the same rules into the far future and far past.\n     * This is historically inaccurate, but is correct for the ISO-8601 standard.\n     *\n     * @param {number} prolepticYear - the ISO proleptic year to check\n     * @return true if the year is leap, false otherwise\n     */\n    static isLeapYear(prolepticYear) {\n        return ((prolepticYear & 3) === 0) && ((prolepticYear % 100) !== 0 || (prolepticYear % 400) === 0);\n    }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/chrono/IsoChronology.js\n **/","import { ValueRange } from './ValueRange';\n\nclass  ChronoField {\n\n    constructor(name, baseUnit, rangeUnit, range, displayNameKey) {\n        this.name = function () {\n            return name;\n        };\n        this.baseUnit = function () {\n            return baseUnit;\n        };\n        this.rangeUnit = function () {\n            return rangeUnit;\n        };\n        this.range = function () {\n            return range;\n        };\n        this.displayNameKey = function () {\n            return displayNameKey;\n        };\n    }\n\n    checkValidValue(value) {\n        return this.range().checkValidValue(value, this.name());\n    }\n}\n\n\nexport const DAY_OF_MONTH = new ChronoField(\n    \"DayOfMonth\", null, null, ValueRange.of(1, 28, 31), \"day\"\n);\n\nexport const MONTH_OF_YEAR = new ChronoField(\n    \"MonthOfYear\", null, null, ValueRange.of(1, 12), \"month\"\n);\n\nexport const YEAR = new ChronoField(\"\" +\n    \"Year\", null, null, ValueRange.of(-999999, 999999), \"year\"\n);\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/temporal/ChronoField.js\n **/","import {assert} from '../assert';\nimport {DateTimeException} from '../errors'\n\n/**\n * The range of valid values for a date-time field.\n * \n * All TemporalField instances have a valid range of values.\n * For example, the ISO day-of-month runs from 1 to somewhere between 28 and 31.\n * This class captures that valid range.\n * \n * It is important to be aware of the limitations of this class.\n * Only the minimum and maximum values are provided.\n * It is possible for there to be invalid values within the outer range.\n * For example, a weird field may have valid values of 1, 2, 4, 6, 7, thus\n * have a range of '1 - 7', despite that fact that values 3 and 5 are invalid.\n * \n * Instances of this class are not tied to a specific field.\n *\n */\n\nexport class ValueRange {\n\n    constructor(minSmallest, minLargest, maxSmallest, maxLargest) {\n        assert(!(minSmallest > minLargest), \"Smallest minimum value '\" + minSmallest +\n            \"' must be less than largest minimum value '\" + minLargest + \"'\");\n        assert(!(maxSmallest > maxLargest), \"Smallest maximum value '\" + maxSmallest +\n            \"' must be less than largest maximum value '\" + maxLargest + \"'\");\n        assert(!(minLargest > maxLargest), \"Minimum value '\" + minLargest +\n            \"' must be less than maximum value '\" + maxLargest + \"'\");\n\n        this.minimum = function () {\n            return minSmallest;\n        };\n        this.largestMinimum = function () {\n            return minLargest;\n        };\n        this.maximum = function () {\n            return maxLargest;\n        };\n        this.smallestMaximum = function () {\n            return maxSmallest;\n        };\n    }\n\n    isValidValue(value) {\n        return (this.minimum() <= value && value <= this.maximum());\n    }\n\n    checkValidValue(value, field) {\n        var msg;\n        if (!this.isValidValue(value)) {\n            if (field != null) {\n                msg = (\"Invalid value for \" + field + \" (valid values \" + (this.toString()) + \"): \") + value;\n            } else {\n                msg = (\"Invalid value (valid values \" + (this.toString()) + \"): \") + value;\n            }\n            return assert(false, msg, DateTimeException);\n        }\n    }\n\n    /*\n     * Outputs this range as a String.\n     * \n     * The format will be '{min}/{largestMin} - {smallestMax}/{max}',\n     * where the largestMin or smallestMax sections may be omitted, together\n     * with associated slash, if they are the same as the min or max.\n     *\n     * @return {string} a string representation of this range, not null\n     */\n\n    toString() {\n        var str = this.minimum() + (this.minimum() !== this.largestMinimum() ? \"/\" + (this.largestMinimum()) : \"\");\n        str += \" - \";\n        str += this.smallestMaximum() + (this.smallestMaximum() !== this.maximum() ? \"/\" + (this.maximum()) : \"\");\n        return str;\n    }\n\n    /*\n     * called with 2 params: Obtains a fixed value range.\n     *\n     * This factory obtains a range where the minimum and maximum values are fixed.\n     * For example, the ISO month-of-year always runs from 1 to 12.\n     *\n     * @param min  the minimum value\n     * @param max  the maximum value\n     * @return the ValueRange for min, max, not null\n\n     * called with 3 params: Obtains a variable value range.\n     *\n     * This factory obtains a range where the minimum value is fixed and the maximum value may vary.\n     * For example, the ISO day-of-month always starts at 1, but ends between 28 and 31.\n     *\n     * @param min  the minimum value\n     * @param maxSmallest  the smallest maximum value\n     * @param maxLargest  the largest maximum value\n     * @return the ValueRange for min, smallest max, largest max, not null\n\n     * called with 4 params: Obtains a fully variable value range.\n     *\n     * This factory obtains a range where both the minimum and maximum value may vary.\n     *\n     * @param minSmallest  the smallest minimum value\n     * @param minLargest  the largest minimum value\n     * @param maxSmallest  the smallest maximum value\n     * @param maxLargest  the largest maximum value\n     * @return {ValueRange} the ValueRange for smallest min, largest min, smallest max, largest max, not null\n     */\n\n    static of() {\n        if (arguments.length === 2) {\n            return new ValueRange(arguments[0], arguments[0], arguments[1], arguments[1]);\n        } else if (arguments.length === 3) {\n            return new ValueRange(arguments[0], arguments[0], arguments[1], arguments[2]);\n        } else if (arguments.length === 4) {\n            return new ValueRange(arguments[0], arguments[1], arguments[2], arguments[3]);\n        } else {\n            return assert(false, \"Invalid number of arguments \" + arguments.length);\n        }\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/temporal/ValueRange.js\n **/","import {Instant} from './Instant'\nimport {ZoneOffset} from './ZoneOffset'\n\n/**\n * Clock implementation differs from the jdk.\n *\n * javascript only provides the UTC millis of epoch and the ZoneOffset in minutes of the system default time.\n *\n * the system default ZoneId is only guessable by the ZoneOffset, like moment-timezone does by returning one ZoneId\n * with the same ZoneOffset.\n *\n * Therefore we are doing a shortcut here, by defining a SystemUTCClock and a SystemDefaultClock, the Clock itself\n * is returning the ZoneOffset and not the ZoneRules as in the jdk. We should change it, when introducing the iana\n * timezone database and implementing the timezone domains.\n *\n */\n\nexport class Clock {\n    static systemUTC() {\n        return new SystemUTCClock();\n    }\n\n    static systemDefaultZone() {\n        return new SystemDefaultClock();\n    }\n}\n\nclass SystemClock extends Clock {\n    millis() {\n        return new Date().getTime();\n    }\n\n    instant() {\n        return Instant.ofEpochMilli(this.millis());\n    }\n\n    offset() {\n        return ZoneOffset.ofTotalSeconds(0);\n    }\n}\n\nexport class SystemUTCClock extends SystemClock{\n    toString(){\n        return \"SystemClock[UTC]\";\n    }\n}\n\nexport class SystemDefaultClock extends SystemClock{\n    offset(instant) {\n        var offsetInMinutes = new Date().getTimezoneOffset(instant.epochMilli());\n        return ZoneOffset.ofTotalMinutes(offsetInMinutes);\n    }\n\n    toString(){\n        return \"SystemClock[default]\";\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Clock.js\n **/","import {DateTimeException} from './errors'\nimport {MathUtil} from './MathUtil'\n\n// TODO verify the arbitrary values for min/ max seconds, set to about 999_999 Years for now\nconst MIN_SECONDS = -30818963289600;\nconst MAX_SECONDS = 30697775193600;\n\nexport class Instant {\n\n    constructor(seconds, nanoOfSecond){\n        Instant.validate(seconds, nanoOfSecond);\n        this._seconds = seconds;\n        this._nano = nanoOfSecond;\n    }\n\n    epochSecond(){\n        return this._seconds\n    }\n\n    epochMilli(){\n        return this._seconds * 1000 + this._nano / 1000000;\n    }\n\n    nano(){\n        return this._nano\n    }\n\n    equals(otherInstant) {\n        if(this === otherInstant){\n            return true;\n        }\n        if(otherInstant instanceof Instant){\n            return this.epochSecond() === otherInstant.epochSecond() &&\n                this.nano() === otherInstant.nano()\n        }\n        return false;\n    }\n\n    static ofEpochSecond(epochSeconds, nanoAdjustment=0){\n        return Instant._create(epochSeconds, nanoAdjustment);\n    }\n\n    static ofEpochMilli(epochMilli) {\n        var secs = MathUtil.floorDiv(epochMilli, 1000);\n        var mos = MathUtil.floorMod(epochMilli, 1000);\n        return Instant._create(secs, mos * 1000000);\n    }\n\n    static _create(seconds, nanoOfSecond){\n        if(seconds === 0 && nanoOfSecond === 0){\n            return Instant.EPOCH;\n        }\n        return new Instant(seconds, nanoOfSecond);\n    }\n\n    static validate(seconds, nanoOfSecond){\n        if (seconds < MIN_SECONDS || seconds > MAX_SECONDS) {\n            throw new DateTimeException(\"Instant exceeds minimum or maximum instant\")\n        }\n    }\n}\n\nInstant.EPOCH = new Instant(0,0);\nInstant.MIN = Instant.ofEpochSecond(MIN_SECONDS, 0);\nInstant.MAX = Instant.ofEpochSecond(MAX_SECONDS, 999999999);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Instant.js\n **/","import {DateTimeException} from './errors';\nimport {LocalTime} from './LocalTime'\n\nconst MAX_SECONDS = 18 * LocalTime.SECONDS_PER_HOUR;\nvar SECONDS_CACHE = {};\n\nexport class ZoneOffset {\n    constructor(totalSeconds){\n        ZoneOffset.validateTotalSeconds(totalSeconds);\n        this._totalSeconds = totalSeconds;\n    }\n\n    totalSeconds() {\n        return this._totalSeconds;\n    }\n\n    static validateTotalSeconds(totalSeconds){\n        if (Math.abs(totalSeconds) > MAX_SECONDS) {\n            throw new DateTimeException(\"Zone offset not in valid range: -18:00 to +18:00\");\n        }\n    }\n\n    static validate(hours, minutes, seconds) {\n        if (hours < -18 || hours > 18) {\n            throw new DateTimeException(\"Zone offset hours not in valid range: value \" + hours +\n                    \" is not in the range -18 to 18\");\n        }\n        if (hours > 0) {\n            if (minutes < 0 || seconds < 0) {\n                throw new DateTimeException(\"Zone offset minutes and seconds must be positive because hours is positive\");\n            }\n        } else if (hours < 0) {\n            if (minutes > 0 || seconds > 0) {\n                throw new DateTimeException(\"Zone offset minutes and seconds must be negative because hours is negative\");\n            }\n        } else if ((minutes > 0 && seconds < 0) || (minutes < 0 && seconds > 0)) {\n            throw new DateTimeException(\"Zone offset minutes and seconds must have the same sign\");\n        }\n        if (Math.abs(minutes) > 59) {\n            throw new DateTimeException(\"Zone offset minutes not in valid range: abs(value) \" +\n                    Math.abs(minutes) + \" is not in the range 0 to 59\");\n        }\n        if (Math.abs(seconds) > 59) {\n            throw new DateTimeException(\"Zone offset seconds not in valid range: abs(value) \" +\n                    Math.abs(seconds) + \" is not in the range 0 to 59\");\n        }\n        if (Math.abs(hours) == 18 && (Math.abs(minutes) > 0 || Math.abs(seconds) > 0)) {\n            throw new DateTimeException(\"Zone offset not in valid range: -18:00 to +18:00\");\n        }\n    }\n\n    static ofHours(hours) {\n        return ZoneOffset.ofHoursMinutesSeconds(hours, 0, 0);\n    }\n\n    static ofHoursMinutes(hours, minutes) {\n        return ZoneOffset.ofHoursMinutesSeconds(hours, minutes, 0);\n    }\n\n    static ofHoursMinutesSeconds(hours, minutes, seconds) {\n        ZoneOffset.validate(hours, minutes, seconds);\n        var totalSeconds = hours * LocalTime.SECONDS_PER_HOUR + minutes * LocalTime.SECONDS_PER_MINUTE + seconds;\n        return ZoneOffset.ofTotalSeconds(totalSeconds);\n    }\n\n    static ofTotalMinutes(totalMinutes) {\n        var totalSeconds = totalMinutes * LocalTime.SECONDS_PER_MINUTE;\n        return ZoneOffset.ofTotalSeconds(totalSeconds);\n    }\n\n    static ofTotalSeconds(totalSeconds) {\n        if (totalSeconds % (15 * LocalTime.SECONDS_PER_MINUTE) === 0) {\n            var totalSecs = totalSeconds;\n            var result = SECONDS_CACHE[totalSecs];\n            if (result == null) {\n                result = new ZoneOffset(totalSeconds);\n                SECONDS_CACHE[totalSecs] = result;\n            }\n            return result;\n        } else {\n            return new ZoneOffset(totalSeconds);\n        }\n    }\n\n}\n\nZoneOffset.UTC = ZoneOffset.ofTotalSeconds(0);\n\n\n/** WEBPACK FOOTER **\n ** ./src/ZoneOffset.js\n **/","export class LocalTime {\n\n}\n\nLocalTime.HOURS_PER_DAY = 60;\nLocalTime.MINUTES_PER_HOUR = 60;\nLocalTime.MINUTES_PER_DAY = LocalTime.MINUTES_PER_HOUR * LocalTime.HOURS_PER_DAY;\nLocalTime.SECONDS_PER_MINUTE = 60;\nLocalTime.SECONDS_PER_HOUR = LocalTime.SECONDS_PER_MINUTE * LocalTime.MINUTES_PER_HOUR;\nLocalTime.SECONDS_PER_DAY = LocalTime.SECONDS_PER_HOUR * LocalTime.HOURS_PER_DAY;\n\n\n/** WEBPACK FOOTER **\n ** ./src/LocalTime.js\n **/","/**\n * A month-of-year, such as 'July'.\n * <p>\n * {@code Month} is representing the 12 months of the year -\n * January, February, March, April, May, June, July, August, September, October,\n * November and December.\n * <p>\n * In addition to the textual name, each month-of-year has an {@code int} value.\n * The {@code int} value follows normal usage and the ISO-8601 standard,\n * from 1 (January) to 12 (December). It is recommended that applications use the static values defined by this class\n * rather than the {@code int} value to ensure code clarity.\n * <p>\n * This class represents a common concept that is found in many calendar systems.\n * As such, this class may be used by any calendar system that has the month-of-year\n * concept defined exactly equivalent to the ISO-8601 calendar system.\n *\n */\n\nexport class Month {\n    \n    /**\n     *\n     * @param {number} value\n     */\n    constructor(value){\n        this._value = value;\n    }\n\n    /**\n     *\n     * @return {number} gets the value\n     */\n    value() {\n        return this._value\n    }\n\n    /**\n     * Outputs the numerical representation of this month as a String, such as 12.\n     * The output will be in the ISO-8601 format MM.\n     *\n     * @return {string} a string representation of this month, not null\n     */\n    toString() {\n        var monthString;\n\n        var monthValue = this.value();\n\n        if (monthValue < 10) {\n          monthString = \"0\" + monthValue;\n        } else {\n          monthString = \"\" + monthValue;\n        }\n\n        return monthString;\n    }\n\n    /**\n     *\n     * @param {number} month\n     */\n    static of(month) {\n        return MONTHS[month-1];\n    }\n}\n\nMonth.JANUARY = new Month(1);\nMonth.FEBRUARY = new Month(2);\nMonth.MARCH = new Month(3);\nMonth.APRIL = new Month(4);\nMonth.MAY = new Month(5);\nMonth.JUNE = new Month(6);\nMonth.JULY = new Month(7);\nMonth.AUGUST = new Month(8);\nMonth.SEPTEMBER = new Month(9);\nMonth.OCTOBER = new Month(10);\nMonth.NOVEMBER = new Month(11);\nMonth.DECEMBER = new Month(12);\n\nvar MONTHS = [\n    Month.JANUARY, Month.FEBRUARY, Month.MARCH, Month.APRIL, Month.MAY, Month.JUNE,\n    Month.JULY, Month.AUGUST, Month.SEPTEMBER, Month.OCTOBER, Month.NOVEMBER, Month.DECEMBER\n];\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Month.js\n **/"],"sourceRoot":""}